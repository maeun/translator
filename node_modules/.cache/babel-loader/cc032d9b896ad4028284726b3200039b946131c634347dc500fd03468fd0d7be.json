{"ast":null,"code":"'use client';\n\nimport _toConsumableArray from \"C:/side_project/translator/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"C:/side_project/translator/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"C:/side_project/translator/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _ClearIcon, _ArrowDropDownIcon;\nvar _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"clearOnBlur\", \"clearOnEscape\", \"defaultValue\", \"disableCloseOnSelect\", \"disabledItemsFocusable\", \"disableListWrap\", \"filterSelectedOptions\", \"handleHomeEndKeys\", \"includeInputInList\", \"openOnFocus\", \"selectOnFocus\"],\n  _excluded2 = [\"aria-describedby\", \"aria-label\", \"aria-labelledby\", \"autoFocus\", \"clearIcon\", \"clearText\", \"closeText\", \"disableClearable\", \"disabled\", \"endDecorator\", \"error\", \"filterOptions\", \"forcePopupIcon\", \"freeSolo\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"id\", \"inputValue\", \"limitTags\", \"loading\", \"loadingText\", \"multiple\", \"name\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openText\", \"options\", \"placeholder\", \"popupIcon\", \"readOnly\", \"renderGroup\", \"renderOption\", \"renderTags\", \"required\", \"type\", \"startDecorator\", \"size\", \"color\", \"variant\", \"value\", \"component\", \"slots\", \"slotProps\"],\n  _excluded3 = [\"onDelete\"],\n  _excluded4 = [\"onBlur\", \"onFocus\", \"onMouseDown\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType, unstable_useForkRef as useForkRef, unstable_capitalize as capitalize } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { useAutocomplete } from '@mui/base/useAutocomplete';\nimport { Popper } from '@mui/base/Popper';\nimport { useThemeProps } from '../styles';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport styled from '../styles/styled';\nimport { VariantColorProvider, getChildVariantAndColor } from '../styles/variantColorInheritance';\n// slot components\nimport { StyledIconButton } from '../IconButton/IconButton';\n// default render components\nimport Chip from '../Chip';\nimport ChipDelete from '../ChipDelete';\nimport { StyledInputRoot, StyledInputHtml, StyledInputStartDecorator, StyledInputEndDecorator } from '../Input/Input';\nimport List from '../List';\nimport ListProvider from '../List/ListProvider';\nimport ListSubheader from '../ListSubheader';\nimport ListItem from '../ListItem';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport { StyledAutocompleteListbox } from '../AutocompleteListbox/AutocompleteListbox';\nimport { StyledAutocompleteOption } from '../AutocompleteOption/AutocompleteOption';\nimport useSlot from '../utils/useSlot';\nimport ColorInversion, { useColorInversion } from '../styles/ColorInversion';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar defaultIsActiveElementInListbox = function defaultIsActiveElementInListbox(listboxRef) {\n  return listboxRef.current !== null && listboxRef.current.contains(document.activeElement);\n};\n// @ts-ignore\nvar defaultGetOptionLabel = function defaultGetOptionLabel(option) {\n  var _option$label;\n  return (_option$label = option.label) != null ? _option$label : option;\n};\nvar defaultLimitTagsText = function defaultLimitTagsText(more) {\n  return \"+\".concat(more);\n};\nvar defaultRenderGroup = function defaultRenderGroup(params) {\n  return /*#__PURE__*/_jsxs(ListItem, {\n    nested: true,\n    children: [/*#__PURE__*/_jsx(ListSubheader, {\n      sticky: true,\n      children: params.group\n    }), /*#__PURE__*/_jsx(List, {\n      children: params.children\n    })]\n  }, params.key);\n};\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var disabled = ownerState.disabled,\n    focused = ownerState.focused,\n    hasClearIcon = ownerState.hasClearIcon,\n    hasPopupIcon = ownerState.hasPopupIcon,\n    popupOpen = ownerState.popupOpen,\n    variant = ownerState.variant,\n    color = ownerState.color,\n    size = ownerState.size,\n    multiple = ownerState.multiple;\n  var slots = {\n    root: ['root', focused && 'focused', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon', variant && \"variant\".concat(capitalize(variant)), color && \"color\".concat(capitalize(color)), size && \"size\".concat(capitalize(size))],\n    wrapper: ['wrapper', multiple && 'multiple'],\n    input: ['input'],\n    startDecorator: ['startDecorator'],\n    endDecorator: ['endDecorator'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen', disabled && 'disabled'],\n    listbox: ['listbox'],\n    option: ['option'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    limitTag: ['limitTag']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, {});\n};\nvar AutocompleteRoot = styled(StyledInputRoot, {\n  name: 'JoyAutocomplete',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})(function (_ref5) {\n  var ownerState = _ref5.ownerState;\n  return _extends({}, ownerState.size === 'sm' && {\n    '--Autocomplete-wrapperGap': '3px'\n  }, ownerState.size === 'md' && {\n    '--Autocomplete-wrapperGap': '3px'\n  }, ownerState.size === 'lg' && {\n    '--Autocomplete-wrapperGap': '4px'\n  }, {\n    /* Avoid double tap issue on iOS */\n    '@media (pointer: fine)': _defineProperty({}, \"&:hover .\".concat(autocompleteClasses.clearIndicator), {\n      visibility: 'visible'\n    })\n  }, ownerState.multiple && !ownerState.startDecorator && {\n    paddingInlineStart: 0\n  });\n});\n\n/**\n * Wrapper groups the chips (multi selection) and the input\n * so that start/end decorators can stay in the normal flow.\n */\nvar AutocompleteWrapper = styled('div', {\n  name: 'JoyAutocomplete',\n  slot: 'Wrapper',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.wrapper;\n  }\n})(function (_ref6) {\n  var ownerState = _ref6.ownerState;\n  return _defineProperty({\n    flex: 1,\n    // stretch to fill the root slot\n    minWidth: 0,\n    // won't push end decorator out of the autocomplete\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    gap: 'var(--Autocomplete-wrapperGap)'\n  }, \"&.\".concat(autocompleteClasses.multiple), _extends({\n    paddingBlock: 'var(--Autocomplete-wrapperGap)'\n  }, !ownerState.startDecorator && {\n    paddingInlineStart: 'var(--Autocomplete-wrapperGap)'\n  }, !ownerState.endDecorator && {\n    paddingInlineEnd: 'var(--Autocomplete-wrapperGap)'\n  }));\n});\nvar AutocompleteInput = styled(StyledInputHtml, {\n  name: 'JoyAutocomplete',\n  slot: 'Input',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.input;\n  }\n})(function (_ref8) {\n  var ownerState = _ref8.ownerState;\n  return _extends({\n    minWidth: 30,\n    minHeight: 'var(--Chip-minHeight)'\n  }, ownerState.multiple && {\n    marginInlineStart: 'calc(var(--Autocomplete-wrapperGap) * 2.5)'\n  });\n});\nvar AutocompleteStartDecorator = styled(StyledInputStartDecorator, {\n  name: 'JoyAutocomplete',\n  slot: 'StartDecorator',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.startDecorator;\n  }\n})({});\nvar AutocompleteEndDecorator = styled(StyledInputEndDecorator, {\n  name: 'JoyAutocomplete',\n  slot: 'EndDecorator',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.endDecorator;\n  }\n})(function (_ref9) {\n  var ownerState = _ref9.ownerState;\n  return _extends({}, (ownerState.hasClearIcon || ownerState.hasPopupIcon) && {\n    '--Button-margin': '0px',\n    '--IconButton-margin': '0px',\n    '--Icon-margin': '0px'\n  });\n});\nvar AutocompleteClearIndicator = styled(StyledIconButton, {\n  name: 'JoyAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.clearIndicator;\n  }\n})(function (_ref10) {\n  var ownerState = _ref10.ownerState;\n  return _extends({\n    alignSelf: 'center'\n  }, !ownerState.hasPopupIcon && {\n    marginInlineEnd: 'calc(var(--Input-decoratorChildOffset) * -1)'\n  }, {\n    marginInlineStart: 'calc(var(--_Input-paddingBlock) / 2)',\n    visibility: ownerState.focused ? 'visible' : 'hidden'\n  });\n});\nvar AutocompletePopupIndicator = styled(StyledIconButton, {\n  name: 'JoyAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.popupIndicator;\n  }\n})(_defineProperty({\n  alignSelf: 'center',\n  marginInlineStart: 'calc(var(--_Input-paddingBlock) / 2)',\n  marginInlineEnd: 'calc(var(--Input-decoratorChildOffset) * -1)'\n}, \"&.\".concat(autocompleteClasses.popupIndicatorOpen), {\n  transform: 'rotate(180deg)',\n  '--Icon-color': 'currentColor'\n}));\nvar AutocompleteListbox = styled(StyledAutocompleteListbox, {\n  name: 'JoyAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.listbox;\n  }\n})(function (_ref11) {\n  var theme = _ref11.theme;\n  return {\n    // `unstable_popup-zIndex` is a private variable that lets other component, e.g. Modal, to override the z-index so that the listbox can be displayed above the Modal.\n    zIndex: \"var(--unstable_popup-zIndex, \".concat(theme.vars.zIndex.popup, \")\")\n  };\n});\nvar AutocompleteOption = styled(StyledAutocompleteOption, {\n  name: 'JoyAutocomplete',\n  slot: 'Option',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.option;\n  }\n})({});\nvar AutocompleteLoading = styled(ListItem, {\n  name: 'JoyAutocomplete',\n  slot: 'Loading',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.loading;\n  }\n})(function (_ref12) {\n  var theme = _ref12.theme;\n  return {\n    color: (theme.vars || theme).palette.text.secondary\n  };\n});\nvar AutocompleteNoOptions = styled(ListItem, {\n  name: 'JoyAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.noOptions;\n  }\n})(function (_ref13) {\n  var theme = _ref13.theme;\n  return {\n    color: (theme.vars || theme).palette.text.secondary\n  };\n});\nvar AutocompleteLimitTag = styled('div', {\n  name: 'JoyAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.noOptions;\n  }\n})({\n  marginInlineStart: 'calc(var(--Input-paddingInline) / 2)',\n  marginBlockStart: 'var(--_Input-paddingBlock)'\n});\nvar excludeUseAutocompleteParams = function excludeUseAutocompleteParams(_ref) {\n  var other = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return other;\n};\n/**\n *\n * Demos:\n *\n * - [Autocomplete](https://mui.com/joy-ui/react-autocomplete/)\n *\n * API:\n *\n * - [Autocomplete API](https://mui.com/joy-ui/api/autocomplete/)\n */\nvar Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _rootStateClasses;\n  var _ref2, _inProps$error, _ref3, _inProps$size, _inProps$color, _formControl$color, _ref4;\n  var props = useThemeProps({\n    props: inProps,\n    name: 'JoyAutocomplete'\n  });\n  var ariaDescribedby = props['aria-describedby'],\n    ariaLabel = props['aria-label'],\n    ariaLabelledby = props['aria-labelledby'],\n    autoFocus = props.autoFocus,\n    _props$clearIcon = props.clearIcon,\n    clearIcon = _props$clearIcon === void 0 ? _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n      fontSize: \"md\"\n    })) : _props$clearIcon,\n    _props$clearText = props.clearText,\n    clearText = _props$clearText === void 0 ? 'Clear' : _props$clearText,\n    _props$closeText = props.closeText,\n    closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n    _props$disableClearab = props.disableClearable,\n    disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n    disabledProp = props.disabled,\n    endDecorator = props.endDecorator,\n    _props$error = props.error,\n    errorProp = _props$error === void 0 ? false : _props$error,\n    _props$forcePopupIcon = props.forcePopupIcon,\n    forcePopupIcon = _props$forcePopupIcon === void 0 ? 'auto' : _props$forcePopupIcon,\n    _props$freeSolo = props.freeSolo,\n    freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n    _props$getLimitTagsTe = props.getLimitTagsText,\n    getLimitTagsText = _props$getLimitTagsTe === void 0 ? defaultLimitTagsText : _props$getLimitTagsTe,\n    _props$getOptionLabel = props.getOptionLabel,\n    getOptionLabel = _props$getOptionLabel === void 0 ? defaultGetOptionLabel : _props$getOptionLabel,\n    groupBy = props.groupBy,\n    id = props.id,\n    _props$limitTags = props.limitTags,\n    limitTags = _props$limitTags === void 0 ? -1 : _props$limitTags,\n    _props$loading = props.loading,\n    loading = _props$loading === void 0 ? false : _props$loading,\n    _props$loadingText = props.loadingText,\n    loadingText = _props$loadingText === void 0 ? 'Loading…' : _props$loadingText,\n    _props$multiple = props.multiple,\n    multiple = _props$multiple === void 0 ? false : _props$multiple,\n    name = props.name,\n    _props$noOptionsText = props.noOptionsText,\n    noOptionsText = _props$noOptionsText === void 0 ? 'No options' : _props$noOptionsText,\n    _props$openText = props.openText,\n    openText = _props$openText === void 0 ? 'Open' : _props$openText,\n    placeholder = props.placeholder,\n    _props$popupIcon = props.popupIcon,\n    popupIcon = _props$popupIcon === void 0 ? _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})) : _props$popupIcon,\n    _props$readOnly = props.readOnly,\n    readOnly = _props$readOnly === void 0 ? false : _props$readOnly,\n    _props$renderGroup = props.renderGroup,\n    renderGroup = _props$renderGroup === void 0 ? defaultRenderGroup : _props$renderGroup,\n    renderOptionProp = props.renderOption,\n    renderTags = props.renderTags,\n    required = props.required,\n    type = props.type,\n    startDecorator = props.startDecorator,\n    _props$size = props.size,\n    sizeProp = _props$size === void 0 ? 'md' : _props$size,\n    _props$color = props.color,\n    colorProp = _props$color === void 0 ? 'neutral' : _props$color,\n    _props$variant = props.variant,\n    variant = _props$variant === void 0 ? 'outlined' : _props$variant,\n    component = props.component,\n    _props$slots2 = props.slots,\n    slots = _props$slots2 === void 0 ? {} : _props$slots2,\n    _props$slotProps = props.slotProps,\n    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n    otherProps = _objectWithoutPropertiesLoose(props, _excluded2);\n  var other = excludeUseAutocompleteParams(otherProps);\n  var _useColorInversion = useColorInversion(variant),\n    getColor = _useColorInversion.getColor;\n  var formControl = React.useContext(FormControlContext);\n  var error = (_ref2 = (_inProps$error = inProps.error) != null ? _inProps$error : formControl == null ? void 0 : formControl.error) != null ? _ref2 : errorProp;\n  var size = (_ref3 = (_inProps$size = inProps.size) != null ? _inProps$size : formControl == null ? void 0 : formControl.size) != null ? _ref3 : sizeProp;\n  var rootColor = (_inProps$color = inProps.color) != null ? _inProps$color : error ? 'danger' : (_formControl$color = formControl == null ? void 0 : formControl.color) != null ? _formControl$color : colorProp;\n  var color = getColor(inProps.color, rootColor);\n  var disabled = (_ref4 = disabledProp != null ? disabledProp : formControl == null ? void 0 : formControl.disabled) != null ? _ref4 : false;\n  var _useAutocomplete = useAutocomplete(_extends({}, props, {\n      id: id != null ? id : formControl == null ? void 0 : formControl.htmlFor,\n      componentName: 'Autocomplete',\n      unstable_classNamePrefix: 'Mui',\n      unstable_isActiveElementInListbox: defaultIsActiveElementInListbox\n    })),\n    getRootProps = _useAutocomplete.getRootProps,\n    getInputProps = _useAutocomplete.getInputProps,\n    getPopupIndicatorProps = _useAutocomplete.getPopupIndicatorProps,\n    getClearProps = _useAutocomplete.getClearProps,\n    getTagProps = _useAutocomplete.getTagProps,\n    getListboxProps = _useAutocomplete.getListboxProps,\n    getOptionProps = _useAutocomplete.getOptionProps,\n    value = _useAutocomplete.value,\n    dirty = _useAutocomplete.dirty,\n    popupOpen = _useAutocomplete.popupOpen,\n    focused = _useAutocomplete.focused,\n    focusedTag = _useAutocomplete.focusedTag,\n    anchorEl = _useAutocomplete.anchorEl,\n    setAnchorEl = _useAutocomplete.setAnchorEl,\n    inputValue = _useAutocomplete.inputValue,\n    groupedOptions = _useAutocomplete.groupedOptions;\n  var _getInputProps2 = getInputProps(),\n    handleInputMouseDown = _getInputProps2.onMouseDown;\n  var _getRootProps = getRootProps(),\n    handleRootOnClick = _getRootProps.onClick;\n  var hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  var hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n\n  // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n  var ownerState = _extends({}, props, {\n    value: value,\n    disabled: disabled,\n    focused: focused,\n    getOptionLabel: getOptionLabel,\n    hasOptions: !!groupedOptions.length,\n    hasClearIcon: hasClearIcon,\n    hasPopupIcon: hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen: popupOpen,\n    size: size,\n    color: color,\n    variant: variant\n  });\n  var classes = useUtilityClasses(ownerState);\n  var externalForwardedProps = _extends({}, other, {\n    component: component,\n    slots: slots,\n    slotProps: slotProps\n  });\n  var selectedOptions;\n  if (multiple && value.length > 0) {\n    var getCustomizedTagProps = function getCustomizedTagProps(params) {\n      var _getTagProps = getTagProps(params),\n        onDelete = _getTagProps.onDelete,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded3);\n      return _extends({\n        disabled: disabled,\n        size: size,\n        onClick: onDelete\n      }, tagProps);\n    };\n    if (renderTags) {\n      selectedOptions = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      selectedOptions = value.map(function (option, index) {\n        return /*#__PURE__*/_jsx(Chip, {\n          size: size,\n          variant: \"soft\",\n          color: color === 'context' ? undefined : 'neutral',\n          endDecorator: /*#__PURE__*/_jsx(ChipDelete, _extends({}, getCustomizedTagProps({\n            index: index\n          }))),\n          children: getOptionLabel(option)\n        }, index);\n      });\n    }\n  }\n  var rootRef = useForkRef(ref, setAnchorEl);\n  var rootStateClasses = (_rootStateClasses = {}, _defineProperty(_rootStateClasses, autocompleteClasses.disabled, disabled), _defineProperty(_rootStateClasses, autocompleteClasses.error, error), _defineProperty(_rootStateClasses, autocompleteClasses.focused, focused), _defineProperty(_rootStateClasses, autocompleteClasses.formControl, Boolean(formControl)), _rootStateClasses);\n  var _useSlot = useSlot('root', {\n      ref: rootRef,\n      className: [classes.root, rootStateClasses],\n      elementType: AutocompleteRoot,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState,\n      getSlotProps: getRootProps,\n      additionalProps: {\n        onClick: function onClick(event) {\n          if (handleRootOnClick) {\n            handleRootOnClick(event);\n          }\n          if (event.currentTarget === event.target && handleInputMouseDown) {\n            handleInputMouseDown(event);\n          }\n        }\n      }\n    }),\n    _useSlot2 = _slicedToArray(_useSlot, 2),\n    SlotRoot = _useSlot2[0],\n    rootProps = _useSlot2[1];\n  var _useSlot3 = useSlot('wrapper', {\n      className: classes.wrapper,\n      elementType: AutocompleteWrapper,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState\n    }),\n    _useSlot4 = _slicedToArray(_useSlot3, 2),\n    SlotWrapper = _useSlot4[0],\n    wrapperProps = _useSlot4[1];\n  var inputStateClasses = _defineProperty({}, autocompleteClasses.disabled, disabled);\n  var _useSlot5 = useSlot('input', {\n      className: [classes.input, inputStateClasses],\n      elementType: AutocompleteInput,\n      getSlotProps: function getSlotProps(handlers) {\n        var _getInputProps = getInputProps(),\n          _onBlur = _getInputProps.onBlur,\n          _onFocus = _getInputProps.onFocus,\n          _onMouseDown = _getInputProps.onMouseDown,\n          inputSlotProps = _objectWithoutPropertiesLoose(_getInputProps, _excluded4);\n        return _extends({}, inputSlotProps, {\n          onBlur: function onBlur(event) {\n            var _handlers$onBlur;\n            _onBlur == null || _onBlur(event);\n            (_handlers$onBlur = handlers.onBlur) == null || _handlers$onBlur.call(handlers, event);\n          },\n          onFocus: function onFocus(event) {\n            var _handlers$onFocus;\n            _onFocus == null || _onFocus(event);\n            (_handlers$onFocus = handlers.onFocus) == null || _handlers$onFocus.call(handlers, event);\n          },\n          onMouseDown: function onMouseDown(event) {\n            var _handlers$onMouseDown;\n            _onMouseDown == null || _onMouseDown(event);\n            (_handlers$onMouseDown = handlers.onMouseDown) == null || _handlers$onMouseDown.call(handlers, event);\n          }\n        });\n      },\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState,\n      additionalProps: {\n        autoFocus: autoFocus,\n        placeholder: placeholder,\n        name: name,\n        readOnly: readOnly,\n        disabled: disabled,\n        required: required != null ? required : formControl == null ? void 0 : formControl.required,\n        type: type,\n        'aria-invalid': error || undefined,\n        'aria-label': ariaLabel,\n        'aria-labelledby': ariaLabelledby,\n        'aria-describedby': ariaDescribedby != null ? ariaDescribedby : formControl == null ? void 0 : formControl['aria-describedby']\n      }\n    }),\n    _useSlot6 = _slicedToArray(_useSlot5, 2),\n    SlotInput = _useSlot6[0],\n    inputProps = _useSlot6[1];\n  var _useSlot7 = useSlot('startDecorator', {\n      className: classes.startDecorator,\n      elementType: AutocompleteStartDecorator,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState\n    }),\n    _useSlot8 = _slicedToArray(_useSlot7, 2),\n    SlotStartDecorator = _useSlot8[0],\n    startDecoratorProps = _useSlot8[1];\n  var _useSlot9 = useSlot('endDecorator', {\n      className: classes.endDecorator,\n      elementType: AutocompleteEndDecorator,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState\n    }),\n    _useSlot10 = _slicedToArray(_useSlot9, 2),\n    SlotEndDecorator = _useSlot10[0],\n    endDecoratorProps = _useSlot10[1];\n  var _useSlot11 = useSlot('clearIndicator', {\n      className: classes.clearIndicator,\n      elementType: AutocompleteClearIndicator,\n      getSlotProps: getClearProps,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState,\n      getSlotOwnerState: function getSlotOwnerState(mergedProps) {\n        return {\n          size: mergedProps.size || size,\n          variant: mergedProps.variant || getChildVariantAndColor(variant, rootColor).variant || 'plain',\n          color: mergedProps.color || getChildVariantAndColor(variant, rootColor).color || 'neutral',\n          disableColorInversion: !!inProps.color\n        };\n      },\n      additionalProps: {\n        'aria-label': clearText,\n        title: clearText\n      }\n    }),\n    _useSlot12 = _slicedToArray(_useSlot11, 2),\n    SlotClearIndicator = _useSlot12[0],\n    clearIndicatorProps = _useSlot12[1];\n  var _useSlot13 = useSlot('popupIndicator', {\n      className: classes.popupIndicator,\n      elementType: AutocompletePopupIndicator,\n      getSlotProps: getPopupIndicatorProps,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState,\n      getSlotOwnerState: function getSlotOwnerState(mergedProps) {\n        return {\n          size: mergedProps.size || size,\n          variant: mergedProps.variant || getChildVariantAndColor(variant, rootColor).variant || 'plain',\n          color: mergedProps.color || getChildVariantAndColor(variant, rootColor).color || 'neutral',\n          disableColorInversion: !!inProps.color\n        };\n      },\n      additionalProps: {\n        disabled: disabled,\n        'aria-label': popupOpen ? closeText : openText,\n        title: popupOpen ? closeText : openText,\n        type: 'button'\n      }\n    }),\n    _useSlot14 = _slicedToArray(_useSlot13, 2),\n    SlotPopupIndicator = _useSlot14[0],\n    popupIndicatorProps = _useSlot14[1];\n  var _useSlot15 = useSlot('listbox', {\n      className: classes.listbox,\n      elementType: AutocompleteListbox,\n      getSlotProps: getListboxProps,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState,\n      getSlotOwnerState: function getSlotOwnerState(mergedProps) {\n        return {\n          size: mergedProps.size || size,\n          variant: mergedProps.variant || variant,\n          color: mergedProps.color || (!mergedProps.disablePortal ? rootColor : color),\n          disableColorInversion: !mergedProps.disablePortal\n        };\n      },\n      additionalProps: {\n        anchorEl: anchorEl,\n        open: popupOpen,\n        style: anchorEl ? {\n          width: anchorEl.clientWidth\n        } : {}\n      }\n    }),\n    _useSlot16 = _slicedToArray(_useSlot15, 2),\n    SlotListbox = _useSlot16[0],\n    listboxProps = _useSlot16[1];\n  var _useSlot17 = useSlot('loading', {\n      className: classes.loading,\n      elementType: AutocompleteLoading,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState\n    }),\n    _useSlot18 = _slicedToArray(_useSlot17, 2),\n    SlotLoading = _useSlot18[0],\n    loadingProps = _useSlot18[1];\n  var _useSlot19 = useSlot('noOptions', {\n      className: classes.noOptions,\n      elementType: AutocompleteNoOptions,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState,\n      additionalProps: {\n        role: 'presentation',\n        onMouseDown: function onMouseDown(event) {\n          // Prevent input blur when interacting with the \"no options\" content\n          event.preventDefault();\n        }\n      }\n    }),\n    _useSlot20 = _slicedToArray(_useSlot19, 2),\n    SlotNoOptions = _useSlot20[0],\n    noOptionsProps = _useSlot20[1];\n  var _useSlot21 = useSlot('limitTag', {\n      className: classes.limitTag,\n      elementType: AutocompleteLimitTag,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState\n    }),\n    _useSlot22 = _slicedToArray(_useSlot21, 2),\n    SlotLimitTag = _useSlot22[0],\n    limitTagProps = _useSlot22[1];\n  if (limitTags > -1 && Array.isArray(selectedOptions)) {\n    var more = selectedOptions.length - limitTags;\n    if (!focused && more > 0) {\n      selectedOptions = selectedOptions.splice(0, limitTags);\n      selectedOptions.push( /*#__PURE__*/_jsx(SlotLimitTag, _extends({}, limitTagProps, {\n        children: getLimitTagsText(more)\n      }), selectedOptions.length));\n    }\n  }\n  var _useSlot23 = useSlot('option', {\n      className: classes.option,\n      elementType: AutocompleteOption,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState,\n      getSlotOwnerState: function getSlotOwnerState(mergedProps) {\n        return {\n          variant: mergedProps.variant || getChildVariantAndColor(variant, rootColor).variant || 'plain',\n          color: mergedProps.color || getChildVariantAndColor(variant, rootColor).color || 'neutral',\n          disableColorInversion: !listboxProps.disablePortal\n        };\n      },\n      additionalProps: {\n        as: 'li'\n      }\n    }),\n    _useSlot24 = _slicedToArray(_useSlot23, 2),\n    SlotOption = _useSlot24[0],\n    baseOptionProps = _useSlot24[1];\n  var defaultRenderOption = function defaultRenderOption(optionProps, option) {\n    return /*#__PURE__*/_jsx(SlotOption, _extends({}, optionProps, {\n      children: getOptionLabel(option)\n    }));\n  };\n  var renderOption = renderOptionProp || defaultRenderOption;\n  var renderListOption = function renderListOption(option, index) {\n    var optionProps = getOptionProps({\n      option: option,\n      index: index\n    });\n    return renderOption(_extends({}, baseOptionProps, optionProps), option, {\n      // `aria-selected` prop will always by boolean, see useAutocomplete hook.\n      selected: !!optionProps['aria-selected'],\n      inputValue: inputValue,\n      ownerState: ownerState\n    });\n  };\n\n  // Wait for `listboxProps` because `slotProps.listbox` could be a function.\n  var modifiers = React.useMemo(function () {\n    return [{\n      name: 'offset',\n      options: {\n        offset: [0, 4]\n      }\n    }].concat(_toConsumableArray(listboxProps.modifiers || []));\n  }, [listboxProps.modifiers]);\n  var popup = null;\n  if (anchorEl) {\n    var _listboxProps$ownerSt, _props$slots;\n    popup = /*#__PURE__*/_jsx(VariantColorProvider, {\n      variant: variant,\n      color: rootColor,\n      children: /*#__PURE__*/_jsx(ListProvider, {\n        nested: true,\n        children: /*#__PURE__*/_jsxs(SlotListbox, _extends({}, listboxProps, {\n          className: clsx(listboxProps.className, ((_listboxProps$ownerSt = listboxProps.ownerState) == null ? void 0 : _listboxProps$ownerSt.color) === 'context' && autocompleteClasses.colorContext)\n          // @ts-ignore internal logic (too complex to typed PopperOwnProps to SlotListbox but this should be removed when we have `usePopper`)\n          ,\n\n          modifiers: modifiers\n        }, !((_props$slots = props.slots) != null && _props$slots.listbox) && {\n          as: Popper,\n          slots: {\n            root: listboxProps.as || 'ul'\n          }\n        }, {\n          children: [groupedOptions.map(function (option, index) {\n            if (groupBy) {\n              var typedOption = option;\n              return renderGroup({\n                key: String(typedOption.key),\n                group: typedOption.group,\n                children: typedOption.options.map(function (option2, index2) {\n                  return renderListOption(option2, typedOption.index + index2);\n                })\n              });\n            }\n            return renderListOption(option, index);\n          }), loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(SlotLoading, _extends({}, loadingProps, {\n            children: loadingText\n          })) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(SlotNoOptions, _extends({}, noOptionsProps, {\n            children: noOptionsText\n          })) : null]\n        }))\n      })\n    });\n    if (!listboxProps.disablePortal) {\n      // For portal popup, the children should not inherit color inversion from the upper parent.\n      popup = /*#__PURE__*/_jsx(ColorInversion.Provider, {\n        value: undefined,\n        children: popup\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n      children: [startDecorator && /*#__PURE__*/_jsx(SlotStartDecorator, _extends({}, startDecoratorProps, {\n        children: startDecorator\n      })), /*#__PURE__*/_jsxs(SlotWrapper, _extends({}, wrapperProps, {\n        children: [selectedOptions, /*#__PURE__*/_jsx(SlotInput, _extends({}, inputProps))]\n      })), endDecorator && /*#__PURE__*/_jsx(SlotEndDecorator, _extends({}, endDecoratorProps, {\n        children: endDecorator\n      })), hasClearIcon ? /*#__PURE__*/_jsx(SlotClearIndicator, _extends({}, clearIndicatorProps, {\n        children: clearIcon\n      })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(SlotPopupIndicator, _extends({}, popupIndicatorProps, {\n        children: popupIcon\n      })) : null]\n    })), popup]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Identifies the element (or elements) that describes the object.\n   * @see aria-labelledby\n   */\n  'aria-describedby': PropTypes.string,\n  /**\n   * Defines a string value that labels the current element.\n   * @see aria-labelledby.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * Identifies the element (or elements) that labels the current element.\n   * @see aria-describedby.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"md\" />\n   */\n  clearIcon: PropTypes.node,\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes.oneOf(['danger', 'neutral', 'primary', 'success', 'warning']),\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, function (props) {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', \"However, \".concat(props.defaultValue, \" was provided.\")].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Trailing adornment for this input.\n   */\n  endDecorator: PropTypes.node,\n  /**\n   * If `true`, the `input` will indicate an error.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @default createFilterOptions()\n   * @param {Value[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {Value[]}\n   */\n  filterOptions: PropTypes.func,\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {string | number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more: string | number) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {Value} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {Value} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {Value} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {Value} option The option to test.\n   * @param {Value} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {Value|Value[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {Value} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`, `\"touch\"`.\n   */\n  onHighlightChange: PropTypes.func,\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n  /**\n   * The input placeholder\n   */\n  placeholder: PropTypes.string,\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    clearIndicator: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    endDecorator: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    limitTag: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    listbox: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    loading: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    noOptions: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    option: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    popupIndicator: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    startDecorator: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    wrapper: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    clearIndicator: PropTypes.elementType,\n    endDecorator: PropTypes.elementType,\n    input: PropTypes.elementType,\n    limitTag: PropTypes.elementType,\n    listbox: PropTypes.elementType,\n    loading: PropTypes.elementType,\n    noOptions: PropTypes.elementType,\n    option: PropTypes.elementType,\n    popupIndicator: PropTypes.elementType,\n    root: PropTypes.elementType,\n    startDecorator: PropTypes.elementType,\n    wrapper: PropTypes.elementType\n  }),\n  /**\n   * Leading adornment for this input.\n   */\n  startDecorator: PropTypes.node,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, function (props) {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', \"However, \".concat(props.value, \" was provided.\")].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * The [global variant](https://mui.com/joy-ui/main-features/global-variants/) to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid'])\n} : void 0;\nexport default Autocomplete;","map":{"version":3,"names":["_toConsumableArray","_slicedToArray","_defineProperty","_objectWithoutPropertiesLoose","_extends","_ClearIcon","_ArrowDropDownIcon","_excluded","_excluded2","_excluded3","_excluded4","React","PropTypes","clsx","chainPropTypes","integerPropType","unstable_useForkRef","useForkRef","unstable_capitalize","capitalize","unstable_composeClasses","composeClasses","useAutocomplete","Popper","useThemeProps","ClearIcon","ArrowDropDownIcon","styled","VariantColorProvider","getChildVariantAndColor","StyledIconButton","Chip","ChipDelete","StyledInputRoot","StyledInputHtml","StyledInputStartDecorator","StyledInputEndDecorator","List","ListProvider","ListSubheader","ListItem","autocompleteClasses","getAutocompleteUtilityClass","FormControlContext","StyledAutocompleteListbox","StyledAutocompleteOption","useSlot","ColorInversion","useColorInversion","jsx","_jsx","jsxs","_jsxs","defaultIsActiveElementInListbox","listboxRef","current","contains","document","activeElement","defaultGetOptionLabel","option","_option$label","label","defaultLimitTagsText","more","concat","defaultRenderGroup","params","nested","children","sticky","group","key","useUtilityClasses","ownerState","disabled","focused","hasClearIcon","hasPopupIcon","popupOpen","variant","color","size","multiple","slots","root","wrapper","input","startDecorator","endDecorator","clearIndicator","popupIndicator","listbox","loading","noOptions","limitTag","AutocompleteRoot","name","slot","overridesResolver","props","styles","_ref5","visibility","paddingInlineStart","AutocompleteWrapper","_ref6","flex","minWidth","display","alignItems","flexWrap","gap","paddingBlock","paddingInlineEnd","AutocompleteInput","_ref8","minHeight","marginInlineStart","AutocompleteStartDecorator","AutocompleteEndDecorator","_ref9","AutocompleteClearIndicator","_ref10","alignSelf","marginInlineEnd","AutocompletePopupIndicator","popupIndicatorOpen","transform","AutocompleteListbox","_ref11","theme","zIndex","vars","popup","AutocompleteOption","AutocompleteLoading","_ref12","palette","text","secondary","AutocompleteNoOptions","_ref13","AutocompleteLimitTag","marginBlockStart","excludeUseAutocompleteParams","_ref","other","Autocomplete","forwardRef","inProps","ref","_rootStateClasses","_ref2","_inProps$error","_ref3","_inProps$size","_inProps$color","_formControl$color","_ref4","ariaDescribedby","ariaLabel","ariaLabelledby","autoFocus","_props$clearIcon","clearIcon","fontSize","_props$clearText","clearText","_props$closeText","closeText","_props$disableClearab","disableClearable","disabledProp","_props$error","error","errorProp","_props$forcePopupIcon","forcePopupIcon","_props$freeSolo","freeSolo","_props$getLimitTagsTe","getLimitTagsText","_props$getOptionLabel","getOptionLabel","groupBy","id","_props$limitTags","limitTags","_props$loading","_props$loadingText","loadingText","_props$multiple","_props$noOptionsText","noOptionsText","_props$openText","openText","placeholder","_props$popupIcon","popupIcon","_props$readOnly","readOnly","_props$renderGroup","renderGroup","renderOptionProp","renderOption","renderTags","required","type","_props$size","sizeProp","_props$color","colorProp","_props$variant","component","_props$slots2","_props$slotProps","slotProps","otherProps","_useColorInversion","getColor","formControl","useContext","rootColor","_useAutocomplete","htmlFor","componentName","unstable_classNamePrefix","unstable_isActiveElementInListbox","getRootProps","getInputProps","getPopupIndicatorProps","getClearProps","getTagProps","getListboxProps","getOptionProps","value","dirty","focusedTag","anchorEl","setAnchorEl","inputValue","groupedOptions","_getInputProps2","handleInputMouseDown","onMouseDown","_getRootProps","handleRootOnClick","onClick","hasOptions","length","inputFocused","classes","externalForwardedProps","selectedOptions","getCustomizedTagProps","_getTagProps","onDelete","tagProps","map","index","undefined","rootRef","rootStateClasses","Boolean","_useSlot","className","elementType","getSlotProps","additionalProps","event","currentTarget","target","_useSlot2","SlotRoot","rootProps","_useSlot3","_useSlot4","SlotWrapper","wrapperProps","inputStateClasses","_useSlot5","handlers","_getInputProps","onBlur","onFocus","inputSlotProps","_handlers$onBlur","call","_handlers$onFocus","_handlers$onMouseDown","_useSlot6","SlotInput","inputProps","_useSlot7","_useSlot8","SlotStartDecorator","startDecoratorProps","_useSlot9","_useSlot10","SlotEndDecorator","endDecoratorProps","_useSlot11","getSlotOwnerState","mergedProps","disableColorInversion","title","_useSlot12","SlotClearIndicator","clearIndicatorProps","_useSlot13","_useSlot14","SlotPopupIndicator","popupIndicatorProps","_useSlot15","disablePortal","open","style","width","clientWidth","_useSlot16","SlotListbox","listboxProps","_useSlot17","_useSlot18","SlotLoading","loadingProps","_useSlot19","role","preventDefault","_useSlot20","SlotNoOptions","noOptionsProps","_useSlot21","_useSlot22","SlotLimitTag","limitTagProps","Array","isArray","splice","push","_useSlot23","as","_useSlot24","SlotOption","baseOptionProps","defaultRenderOption","optionProps","renderListOption","selected","modifiers","useMemo","options","offset","_listboxProps$ownerSt","_props$slots","colorContext","typedOption","String","option2","index2","Provider","Fragment","process","env","NODE_ENV","propTypes","string","bool","node","oneOf","defaultValue","any","Error","join","filterOptions","func","oneOfType","getOptionDisabled","isOptionEqualToValue","onChange","onClose","onHighlightChange","onInputChange","onKeyDown","onOpen","array","isRequired","shape","object","sx","arrayOf"],"sources":["C:/side_project/translator/node_modules/@mui/joy/Autocomplete/Autocomplete.js"],"sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _ClearIcon, _ArrowDropDownIcon;\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"clearOnBlur\", \"clearOnEscape\", \"defaultValue\", \"disableCloseOnSelect\", \"disabledItemsFocusable\", \"disableListWrap\", \"filterSelectedOptions\", \"handleHomeEndKeys\", \"includeInputInList\", \"openOnFocus\", \"selectOnFocus\"],\n  _excluded2 = [\"aria-describedby\", \"aria-label\", \"aria-labelledby\", \"autoFocus\", \"clearIcon\", \"clearText\", \"closeText\", \"disableClearable\", \"disabled\", \"endDecorator\", \"error\", \"filterOptions\", \"forcePopupIcon\", \"freeSolo\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"id\", \"inputValue\", \"limitTags\", \"loading\", \"loadingText\", \"multiple\", \"name\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openText\", \"options\", \"placeholder\", \"popupIcon\", \"readOnly\", \"renderGroup\", \"renderOption\", \"renderTags\", \"required\", \"type\", \"startDecorator\", \"size\", \"color\", \"variant\", \"value\", \"component\", \"slots\", \"slotProps\"],\n  _excluded3 = [\"onDelete\"],\n  _excluded4 = [\"onBlur\", \"onFocus\", \"onMouseDown\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType, unstable_useForkRef as useForkRef, unstable_capitalize as capitalize } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { useAutocomplete } from '@mui/base/useAutocomplete';\nimport { Popper } from '@mui/base/Popper';\nimport { useThemeProps } from '../styles';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport styled from '../styles/styled';\nimport { VariantColorProvider, getChildVariantAndColor } from '../styles/variantColorInheritance';\n// slot components\nimport { StyledIconButton } from '../IconButton/IconButton';\n// default render components\nimport Chip from '../Chip';\nimport ChipDelete from '../ChipDelete';\nimport { StyledInputRoot, StyledInputHtml, StyledInputStartDecorator, StyledInputEndDecorator } from '../Input/Input';\nimport List from '../List';\nimport ListProvider from '../List/ListProvider';\nimport ListSubheader from '../ListSubheader';\nimport ListItem from '../ListItem';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport { StyledAutocompleteListbox } from '../AutocompleteListbox/AutocompleteListbox';\nimport { StyledAutocompleteOption } from '../AutocompleteOption/AutocompleteOption';\nimport useSlot from '../utils/useSlot';\nimport ColorInversion, { useColorInversion } from '../styles/ColorInversion';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultIsActiveElementInListbox = listboxRef => listboxRef.current !== null && listboxRef.current.contains(document.activeElement);\n// @ts-ignore\nconst defaultGetOptionLabel = option => {\n  var _option$label;\n  return (_option$label = option.label) != null ? _option$label : option;\n};\nconst defaultLimitTagsText = more => `+${more}`;\nconst defaultRenderGroup = params => /*#__PURE__*/_jsxs(ListItem, {\n  nested: true,\n  children: [/*#__PURE__*/_jsx(ListSubheader, {\n    sticky: true,\n    children: params.group\n  }), /*#__PURE__*/_jsx(List, {\n    children: params.children\n  })]\n}, params.key);\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    focused,\n    hasClearIcon,\n    hasPopupIcon,\n    popupOpen,\n    variant,\n    color,\n    size,\n    multiple\n  } = ownerState;\n  const slots = {\n    root: ['root', focused && 'focused', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon', variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],\n    wrapper: ['wrapper', multiple && 'multiple'],\n    input: ['input'],\n    startDecorator: ['startDecorator'],\n    endDecorator: ['endDecorator'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen', disabled && 'disabled'],\n    listbox: ['listbox'],\n    option: ['option'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    limitTag: ['limitTag']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, {});\n};\nconst AutocompleteRoot = styled(StyledInputRoot, {\n  name: 'JoyAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  ownerState\n}) => _extends({}, ownerState.size === 'sm' && {\n  '--Autocomplete-wrapperGap': '3px'\n}, ownerState.size === 'md' && {\n  '--Autocomplete-wrapperGap': '3px'\n}, ownerState.size === 'lg' && {\n  '--Autocomplete-wrapperGap': '4px'\n}, {\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, ownerState.multiple && !ownerState.startDecorator && {\n  paddingInlineStart: 0\n}));\n\n/**\n * Wrapper groups the chips (multi selection) and the input\n * so that start/end decorators can stay in the normal flow.\n */\nconst AutocompleteWrapper = styled('div', {\n  name: 'JoyAutocomplete',\n  slot: 'Wrapper',\n  overridesResolver: (props, styles) => styles.wrapper\n})(({\n  ownerState\n}) => ({\n  flex: 1,\n  // stretch to fill the root slot\n  minWidth: 0,\n  // won't push end decorator out of the autocomplete\n  display: 'flex',\n  alignItems: 'center',\n  flexWrap: 'wrap',\n  gap: 'var(--Autocomplete-wrapperGap)',\n  [`&.${autocompleteClasses.multiple}`]: _extends({\n    paddingBlock: 'var(--Autocomplete-wrapperGap)'\n  }, !ownerState.startDecorator && {\n    paddingInlineStart: 'var(--Autocomplete-wrapperGap)'\n  }, !ownerState.endDecorator && {\n    paddingInlineEnd: 'var(--Autocomplete-wrapperGap)'\n  })\n}));\nconst AutocompleteInput = styled(StyledInputHtml, {\n  name: 'JoyAutocomplete',\n  slot: 'Input',\n  overridesResolver: (props, styles) => styles.input\n})(({\n  ownerState\n}) => _extends({\n  minWidth: 30,\n  minHeight: 'var(--Chip-minHeight)'\n}, ownerState.multiple && {\n  marginInlineStart: 'calc(var(--Autocomplete-wrapperGap) * 2.5)'\n}));\nconst AutocompleteStartDecorator = styled(StyledInputStartDecorator, {\n  name: 'JoyAutocomplete',\n  slot: 'StartDecorator',\n  overridesResolver: (props, styles) => styles.startDecorator\n})({});\nconst AutocompleteEndDecorator = styled(StyledInputEndDecorator, {\n  name: 'JoyAutocomplete',\n  slot: 'EndDecorator',\n  overridesResolver: (props, styles) => styles.endDecorator\n})(({\n  ownerState\n}) => _extends({}, (ownerState.hasClearIcon || ownerState.hasPopupIcon) && {\n  '--Button-margin': '0px',\n  '--IconButton-margin': '0px',\n  '--Icon-margin': '0px'\n}));\nconst AutocompleteClearIndicator = styled(StyledIconButton, {\n  name: 'JoyAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})(({\n  ownerState\n}) => _extends({\n  alignSelf: 'center'\n}, !ownerState.hasPopupIcon && {\n  marginInlineEnd: 'calc(var(--Input-decoratorChildOffset) * -1)'\n}, {\n  marginInlineStart: 'calc(var(--_Input-paddingBlock) / 2)',\n  visibility: ownerState.focused ? 'visible' : 'hidden'\n}));\nconst AutocompletePopupIndicator = styled(StyledIconButton, {\n  name: 'JoyAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: (props, styles) => styles.popupIndicator\n})({\n  alignSelf: 'center',\n  marginInlineStart: 'calc(var(--_Input-paddingBlock) / 2)',\n  marginInlineEnd: 'calc(var(--Input-decoratorChildOffset) * -1)',\n  [`&.${autocompleteClasses.popupIndicatorOpen}`]: {\n    transform: 'rotate(180deg)',\n    '--Icon-color': 'currentColor'\n  }\n});\nconst AutocompleteListbox = styled(StyledAutocompleteListbox, {\n  name: 'JoyAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  // `unstable_popup-zIndex` is a private variable that lets other component, e.g. Modal, to override the z-index so that the listbox can be displayed above the Modal.\n  zIndex: `var(--unstable_popup-zIndex, ${theme.vars.zIndex.popup})`\n}));\nconst AutocompleteOption = styled(StyledAutocompleteOption, {\n  name: 'JoyAutocomplete',\n  slot: 'Option',\n  overridesResolver: (props, styles) => styles.option\n})({});\nconst AutocompleteLoading = styled(ListItem, {\n  name: 'JoyAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary\n}));\nconst AutocompleteNoOptions = styled(ListItem, {\n  name: 'JoyAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary\n}));\nconst AutocompleteLimitTag = styled('div', {\n  name: 'JoyAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})({\n  marginInlineStart: 'calc(var(--Input-paddingInline) / 2)',\n  marginBlockStart: 'var(--_Input-paddingBlock)'\n});\nconst excludeUseAutocompleteParams = _ref => {\n  let other = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return other;\n};\n/**\n *\n * Demos:\n *\n * - [Autocomplete](https://mui.com/joy-ui/react-autocomplete/)\n *\n * API:\n *\n * - [Autocomplete API](https://mui.com/joy-ui/api/autocomplete/)\n */\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _ref2, _inProps$error, _ref3, _inProps$size, _inProps$color, _formControl$color, _ref4;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyAutocomplete'\n  });\n  const {\n      'aria-describedby': ariaDescribedby,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledby,\n      autoFocus,\n      clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n        fontSize: \"md\"\n      })),\n      clearText = 'Clear',\n      closeText = 'Close',\n      disableClearable = false,\n      disabled: disabledProp,\n      endDecorator,\n      error: errorProp = false,\n      forcePopupIcon = 'auto',\n      freeSolo = false,\n      getLimitTagsText = defaultLimitTagsText,\n      getOptionLabel = defaultGetOptionLabel,\n      groupBy,\n      id,\n      limitTags = -1,\n      loading = false,\n      loadingText = 'Loading…',\n      multiple = false,\n      name,\n      noOptionsText = 'No options',\n      openText = 'Open',\n      placeholder,\n      popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n      readOnly = false,\n      renderGroup = defaultRenderGroup,\n      renderOption: renderOptionProp,\n      renderTags,\n      required,\n      type,\n      startDecorator,\n      size: sizeProp = 'md',\n      color: colorProp = 'neutral',\n      variant = 'outlined',\n      component,\n      slots = {},\n      slotProps = {}\n    } = props,\n    otherProps = _objectWithoutPropertiesLoose(props, _excluded2);\n  const other = excludeUseAutocompleteParams(otherProps);\n  const {\n    getColor\n  } = useColorInversion(variant);\n  const formControl = React.useContext(FormControlContext);\n  const error = (_ref2 = (_inProps$error = inProps.error) != null ? _inProps$error : formControl == null ? void 0 : formControl.error) != null ? _ref2 : errorProp;\n  const size = (_ref3 = (_inProps$size = inProps.size) != null ? _inProps$size : formControl == null ? void 0 : formControl.size) != null ? _ref3 : sizeProp;\n  const rootColor = (_inProps$color = inProps.color) != null ? _inProps$color : error ? 'danger' : (_formControl$color = formControl == null ? void 0 : formControl.color) != null ? _formControl$color : colorProp;\n  const color = getColor(inProps.color, rootColor);\n  const disabled = (_ref4 = disabledProp != null ? disabledProp : formControl == null ? void 0 : formControl.disabled) != null ? _ref4 : false;\n  const {\n    getRootProps,\n    getInputProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    id: id != null ? id : formControl == null ? void 0 : formControl.htmlFor,\n    componentName: 'Autocomplete',\n    unstable_classNamePrefix: 'Mui',\n    unstable_isActiveElementInListbox: defaultIsActiveElementInListbox\n  }));\n  const {\n    onMouseDown: handleInputMouseDown\n  } = getInputProps();\n  const {\n    onClick: handleRootOnClick\n  } = getRootProps();\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n\n  // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n  const ownerState = _extends({}, props, {\n    value,\n    disabled,\n    focused,\n    getOptionLabel,\n    hasOptions: !!groupedOptions.length,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size,\n    color,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = _extends({}, other, {\n    component,\n    slots,\n    slotProps\n  });\n  let selectedOptions;\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => {\n      const _getTagProps = getTagProps(params),\n        {\n          onDelete\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded3);\n      return _extends({\n        disabled,\n        size,\n        onClick: onDelete\n      }, tagProps);\n    };\n    if (renderTags) {\n      selectedOptions = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      selectedOptions = value.map((option, index) => {\n        return /*#__PURE__*/_jsx(Chip, {\n          size: size,\n          variant: \"soft\",\n          color: color === 'context' ? undefined : 'neutral',\n          endDecorator: /*#__PURE__*/_jsx(ChipDelete, _extends({}, getCustomizedTagProps({\n            index\n          }))),\n          children: getOptionLabel(option)\n        }, index);\n      });\n    }\n  }\n  const rootRef = useForkRef(ref, setAnchorEl);\n  const rootStateClasses = {\n    [autocompleteClasses.disabled]: disabled,\n    [autocompleteClasses.error]: error,\n    [autocompleteClasses.focused]: focused,\n    [autocompleteClasses.formControl]: Boolean(formControl)\n  };\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref: rootRef,\n    className: [classes.root, rootStateClasses],\n    elementType: AutocompleteRoot,\n    externalForwardedProps,\n    ownerState,\n    getSlotProps: getRootProps,\n    additionalProps: {\n      onClick: event => {\n        if (handleRootOnClick) {\n          handleRootOnClick(event);\n        }\n        if (event.currentTarget === event.target && handleInputMouseDown) {\n          handleInputMouseDown(event);\n        }\n      }\n    }\n  });\n  const [SlotWrapper, wrapperProps] = useSlot('wrapper', {\n    className: classes.wrapper,\n    elementType: AutocompleteWrapper,\n    externalForwardedProps,\n    ownerState\n  });\n  const inputStateClasses = {\n    [autocompleteClasses.disabled]: disabled\n  };\n  const [SlotInput, inputProps] = useSlot('input', {\n    className: [classes.input, inputStateClasses],\n    elementType: AutocompleteInput,\n    getSlotProps: handlers => {\n      const _getInputProps = getInputProps(),\n        {\n          onBlur,\n          onFocus,\n          onMouseDown\n        } = _getInputProps,\n        inputSlotProps = _objectWithoutPropertiesLoose(_getInputProps, _excluded4);\n      return _extends({}, inputSlotProps, {\n        onBlur: event => {\n          var _handlers$onBlur;\n          onBlur == null || onBlur(event);\n          (_handlers$onBlur = handlers.onBlur) == null || _handlers$onBlur.call(handlers, event);\n        },\n        onFocus: event => {\n          var _handlers$onFocus;\n          onFocus == null || onFocus(event);\n          (_handlers$onFocus = handlers.onFocus) == null || _handlers$onFocus.call(handlers, event);\n        },\n        onMouseDown: event => {\n          var _handlers$onMouseDown;\n          onMouseDown == null || onMouseDown(event);\n          (_handlers$onMouseDown = handlers.onMouseDown) == null || _handlers$onMouseDown.call(handlers, event);\n        }\n      });\n    },\n    externalForwardedProps,\n    ownerState,\n    additionalProps: {\n      autoFocus,\n      placeholder,\n      name,\n      readOnly,\n      disabled,\n      required: required != null ? required : formControl == null ? void 0 : formControl.required,\n      type,\n      'aria-invalid': error || undefined,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledby,\n      'aria-describedby': ariaDescribedby != null ? ariaDescribedby : formControl == null ? void 0 : formControl['aria-describedby']\n    }\n  });\n  const [SlotStartDecorator, startDecoratorProps] = useSlot('startDecorator', {\n    className: classes.startDecorator,\n    elementType: AutocompleteStartDecorator,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotEndDecorator, endDecoratorProps] = useSlot('endDecorator', {\n    className: classes.endDecorator,\n    elementType: AutocompleteEndDecorator,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotClearIndicator, clearIndicatorProps] = useSlot('clearIndicator', {\n    className: classes.clearIndicator,\n    elementType: AutocompleteClearIndicator,\n    getSlotProps: getClearProps,\n    externalForwardedProps,\n    ownerState,\n    getSlotOwnerState: mergedProps => ({\n      size: mergedProps.size || size,\n      variant: mergedProps.variant || getChildVariantAndColor(variant, rootColor).variant || 'plain',\n      color: mergedProps.color || getChildVariantAndColor(variant, rootColor).color || 'neutral',\n      disableColorInversion: !!inProps.color\n    }),\n    additionalProps: {\n      'aria-label': clearText,\n      title: clearText\n    }\n  });\n  const [SlotPopupIndicator, popupIndicatorProps] = useSlot('popupIndicator', {\n    className: classes.popupIndicator,\n    elementType: AutocompletePopupIndicator,\n    getSlotProps: getPopupIndicatorProps,\n    externalForwardedProps,\n    ownerState,\n    getSlotOwnerState: mergedProps => ({\n      size: mergedProps.size || size,\n      variant: mergedProps.variant || getChildVariantAndColor(variant, rootColor).variant || 'plain',\n      color: mergedProps.color || getChildVariantAndColor(variant, rootColor).color || 'neutral',\n      disableColorInversion: !!inProps.color\n    }),\n    additionalProps: {\n      disabled,\n      'aria-label': popupOpen ? closeText : openText,\n      title: popupOpen ? closeText : openText,\n      type: 'button'\n    }\n  });\n  const [SlotListbox, listboxProps] = useSlot('listbox', {\n    className: classes.listbox,\n    elementType: AutocompleteListbox,\n    getSlotProps: getListboxProps,\n    externalForwardedProps,\n    ownerState,\n    getSlotOwnerState: mergedProps => ({\n      size: mergedProps.size || size,\n      variant: mergedProps.variant || variant,\n      color: mergedProps.color || (!mergedProps.disablePortal ? rootColor : color),\n      disableColorInversion: !mergedProps.disablePortal\n    }),\n    additionalProps: {\n      anchorEl,\n      open: popupOpen,\n      style: anchorEl ? {\n        width: anchorEl.clientWidth\n      } : {}\n    }\n  });\n  const [SlotLoading, loadingProps] = useSlot('loading', {\n    className: classes.loading,\n    elementType: AutocompleteLoading,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotNoOptions, noOptionsProps] = useSlot('noOptions', {\n    className: classes.noOptions,\n    elementType: AutocompleteNoOptions,\n    externalForwardedProps,\n    ownerState,\n    additionalProps: {\n      role: 'presentation',\n      onMouseDown: event => {\n        // Prevent input blur when interacting with the \"no options\" content\n        event.preventDefault();\n      }\n    }\n  });\n  const [SlotLimitTag, limitTagProps] = useSlot('limitTag', {\n    className: classes.limitTag,\n    elementType: AutocompleteLimitTag,\n    externalForwardedProps,\n    ownerState\n  });\n  if (limitTags > -1 && Array.isArray(selectedOptions)) {\n    const more = selectedOptions.length - limitTags;\n    if (!focused && more > 0) {\n      selectedOptions = selectedOptions.splice(0, limitTags);\n      selectedOptions.push( /*#__PURE__*/_jsx(SlotLimitTag, _extends({}, limitTagProps, {\n        children: getLimitTagsText(more)\n      }), selectedOptions.length));\n    }\n  }\n  const [SlotOption, baseOptionProps] = useSlot('option', {\n    className: classes.option,\n    elementType: AutocompleteOption,\n    externalForwardedProps,\n    ownerState,\n    getSlotOwnerState: mergedProps => ({\n      variant: mergedProps.variant || getChildVariantAndColor(variant, rootColor).variant || 'plain',\n      color: mergedProps.color || getChildVariantAndColor(variant, rootColor).color || 'neutral',\n      disableColorInversion: !listboxProps.disablePortal\n    }),\n    additionalProps: {\n      as: 'li'\n    }\n  });\n  const defaultRenderOption = (optionProps, option) => /*#__PURE__*/_jsx(SlotOption, _extends({}, optionProps, {\n    children: getOptionLabel(option)\n  }));\n  const renderOption = renderOptionProp || defaultRenderOption;\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, baseOptionProps, optionProps), option, {\n      // `aria-selected` prop will always by boolean, see useAutocomplete hook.\n      selected: !!optionProps['aria-selected'],\n      inputValue,\n      ownerState\n    });\n  };\n\n  // Wait for `listboxProps` because `slotProps.listbox` could be a function.\n  const modifiers = React.useMemo(() => [{\n    name: 'offset',\n    options: {\n      offset: [0, 4]\n    }\n  }, ...(listboxProps.modifiers || [])], [listboxProps.modifiers]);\n  let popup = null;\n  if (anchorEl) {\n    var _listboxProps$ownerSt, _props$slots;\n    popup = /*#__PURE__*/_jsx(VariantColorProvider, {\n      variant: variant,\n      color: rootColor,\n      children: /*#__PURE__*/_jsx(ListProvider, {\n        nested: true,\n        children: /*#__PURE__*/_jsxs(SlotListbox, _extends({}, listboxProps, {\n          className: clsx(listboxProps.className, ((_listboxProps$ownerSt = listboxProps.ownerState) == null ? void 0 : _listboxProps$ownerSt.color) === 'context' && autocompleteClasses.colorContext)\n          // @ts-ignore internal logic (too complex to typed PopperOwnProps to SlotListbox but this should be removed when we have `usePopper`)\n          ,\n          modifiers: modifiers\n        }, !((_props$slots = props.slots) != null && _props$slots.listbox) && {\n          as: Popper,\n          slots: {\n            root: listboxProps.as || 'ul'\n          }\n        }, {\n          children: [groupedOptions.map((option, index) => {\n            if (groupBy) {\n              const typedOption = option;\n              return renderGroup({\n                key: String(typedOption.key),\n                group: typedOption.group,\n                children: typedOption.options.map((option2, index2) => renderListOption(option2, typedOption.index + index2))\n              });\n            }\n            return renderListOption(option, index);\n          }), loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(SlotLoading, _extends({}, loadingProps, {\n            children: loadingText\n          })) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(SlotNoOptions, _extends({}, noOptionsProps, {\n            children: noOptionsText\n          })) : null]\n        }))\n      })\n    });\n    if (!listboxProps.disablePortal) {\n      // For portal popup, the children should not inherit color inversion from the upper parent.\n      popup = /*#__PURE__*/_jsx(ColorInversion.Provider, {\n        value: undefined,\n        children: popup\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n      children: [startDecorator && /*#__PURE__*/_jsx(SlotStartDecorator, _extends({}, startDecoratorProps, {\n        children: startDecorator\n      })), /*#__PURE__*/_jsxs(SlotWrapper, _extends({}, wrapperProps, {\n        children: [selectedOptions, /*#__PURE__*/_jsx(SlotInput, _extends({}, inputProps))]\n      })), endDecorator && /*#__PURE__*/_jsx(SlotEndDecorator, _extends({}, endDecoratorProps, {\n        children: endDecorator\n      })), hasClearIcon ? /*#__PURE__*/_jsx(SlotClearIndicator, _extends({}, clearIndicatorProps, {\n        children: clearIcon\n      })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(SlotPopupIndicator, _extends({}, popupIndicatorProps, {\n        children: popupIcon\n      })) : null]\n    })), popup]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Identifies the element (or elements) that describes the object.\n   * @see aria-labelledby\n   */\n  'aria-describedby': PropTypes.string,\n  /**\n   * Defines a string value that labels the current element.\n   * @see aria-labelledby.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * Identifies the element (or elements) that labels the current element.\n   * @see aria-describedby.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"md\" />\n   */\n  clearIcon: PropTypes.node,\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes.oneOf(['danger', 'neutral', 'primary', 'success', 'warning']),\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Trailing adornment for this input.\n   */\n  endDecorator: PropTypes.node,\n  /**\n   * If `true`, the `input` will indicate an error.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @default createFilterOptions()\n   * @param {Value[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {Value[]}\n   */\n  filterOptions: PropTypes.func,\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {string | number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more: string | number) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {Value} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {Value} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {Value} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {Value} option The option to test.\n   * @param {Value} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {Value|Value[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {Value} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`, `\"touch\"`.\n   */\n  onHighlightChange: PropTypes.func,\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n  /**\n   * The input placeholder\n   */\n  placeholder: PropTypes.string,\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    clearIndicator: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    endDecorator: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    limitTag: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    listbox: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    loading: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    noOptions: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    option: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    popupIndicator: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    startDecorator: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    wrapper: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    clearIndicator: PropTypes.elementType,\n    endDecorator: PropTypes.elementType,\n    input: PropTypes.elementType,\n    limitTag: PropTypes.elementType,\n    listbox: PropTypes.elementType,\n    loading: PropTypes.elementType,\n    noOptions: PropTypes.elementType,\n    option: PropTypes.elementType,\n    popupIndicator: PropTypes.elementType,\n    root: PropTypes.elementType,\n    startDecorator: PropTypes.elementType,\n    wrapper: PropTypes.elementType\n  }),\n  /**\n   * Leading adornment for this input.\n   */\n  startDecorator: PropTypes.node,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * The [global variant](https://mui.com/joy-ui/main-features/global-variants/) to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid'])\n} : void 0;\nexport default Autocomplete;"],"mappings":"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EACpC;AACF;AACA;AACA;AACA;EACE5L,SAAS,EAAE7K,eAAe;EAC1B;AACF;AACA;AACA;AACA;EACE8E,OAAO,EAAEjF,SAAS,CAACoW,IAAI;EACvB;AACF;AACA;AACA;AACA;AACA;EACEjL,WAAW,EAAEnL,SAAS,CAACqW,IAAI;EAC3B;AACF;AACA;AACA;EACE9R,QAAQ,EAAEvE,SAAS,CAACoW,IAAI;EACxB;AACF;AACA;EACE/Q,IAAI,EAAErF,SAAS,CAACmW,MAAM;EACtB;AACF;AACA;AACA;AACA;AACA;EACE7K,aAAa,EAAEtL,SAAS,CAACqW,IAAI;EAC7B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEW,QAAQ,EAAEhX,SAAS,CAAC4W,IAAI;EACxB;AACF;AACA;AACA;AACA;AACA;AACA;EACEK,OAAO,EAAEjX,SAAS,CAAC4W,IAAI;EACvB;AACF;AACA;AACA;AACA;AACA;AACA;EACEM,iBAAiB,EAAElX,SAAS,CAAC4W,IAAI;EACjC;AACF;AACA;AACA;AACA;AACA;AACA;EACEO,aAAa,EAAEnX,SAAS,CAAC4W,IAAI;EAC7B;AACF;AACA;EACEQ,SAAS,EAAEpX,SAAS,CAAC4W,IAAI;EACzB;AACF;AACA;AACA;AACA;AACA;EACES,MAAM,EAAErX,SAAS,CAAC4W,IAAI;EACtB;AACF;AACA;EACE5D,IAAI,EAAEhT,SAAS,CAACoW,IAAI;EACpB;AACF;AACA;AACA;AACA;AACA;EACE5K,QAAQ,EAAExL,SAAS,CAACmW,MAAM;EAC1B;AACF;AACA;EACEf,OAAO,EAAEpV,SAAS,CAACsX,KAAK,CAACC,UAAU;EACnC;AACF;AACA;EACE9L,WAAW,EAAEzL,SAAS,CAACmW,MAAM;EAC7B;AACF;AACA;AACA;EACExK,SAAS,EAAE3L,SAAS,CAACqW,IAAI;EACzB;AACF;AACA;AACA;EACExK,QAAQ,EAAE7L,SAAS,CAACoW,IAAI;EACxB;AACF;AACA;AACA;AACA;AACA;EACErK,WAAW,EAAE/L,SAAS,CAAC4W,IAAI;EAC3B;AACF;AACA;AACA;AA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}