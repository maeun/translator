{"ast":null,"code":"var _jsxFileName = \"C:\\\\side_project\\\\translator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Configuration, OpenAIApi } from \"openai\";\nimport { Input, Button, Modal, ModalClose, ModalDialog, Typography } from \"@mui/joy\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst configuration = new Configuration({\n  organization: \"org-FtF6gV7TTvDQGBIAMsnGmKVY\",\n  apiKey: \"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\"\n});\nconst openai = new OpenAIApi(configuration);\nconst response = await openai.listEngines();\nconsole.log(response);\nfunction TranslationApp() {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const handleInputChange = event => {\n    setInputText(event.target.value);\n  };\n  const handleButtonClick = async () => {\n    // try {\n    //   const completion = await openai.chat.completions.create({\n    //     model: \"gpt-3.5-turbo\",\n    //     messages: [\n    //       { role: \"system\", content: \"You are a helpful translator. Please translate it in Korean.\" },\n    //       { role: \"user\", content: inputText },\n    //     ],\n    //     max_tokens: 200,\n    //   });\n    //   const response = completion.data.choices[0].message.content;\n\n    //   // API 응답을 처리하거나 다른 작업 수행\n    //   console.log(\"Chatbot Response:\", response);\n    // } catch (error) {\n    //   console.error(\"Error fetching chat completion:\", error);\n    // }\n    const completion = await openai.chat.completions.create({\n      messages: [{\n        role: \"system\",\n        content: \"You are a helpful assistant.\"\n      }],\n      model: \"gpt-3.5-turbo\"\n    });\n    console.log(completion.choices[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"InputWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        color: \"danger\",\n        variant: \"soft\",\n        placeholder: \"\\uC5EC\\uAE30\\uC5D0 \\uC785\\uB825\\uD558\\uC138\\uC694\\u2026\",\n        value: inputText,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"soft\",\n        color: \"primary\",\n        onClick: handleButtonClick,\n        children: \"Open modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(TranslationApp, \"FupQuLxG7pBPrulNgTXkcZMsQO8=\");\n_c = TranslationApp;\nexport default TranslationApp;\nvar _c;\n$RefreshReg$(_c, \"TranslationApp\");","map":{"version":3,"names":["React","useState","Configuration","OpenAIApi","Input","Button","Modal","ModalClose","ModalDialog","Typography","jsxDEV","_jsxDEV","configuration","organization","apiKey","openai","response","listEngines","console","log","TranslationApp","_s","inputText","setInputText","handleInputChange","event","target","value","handleButtonClick","completion","chat","completions","create","messages","role","content","model","choices","className","children","color","variant","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/side_project/translator/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Configuration, OpenAIApi } from \"openai\";\nimport {\n  Input,\n  Button,\n  Modal,\n  ModalClose,\n  ModalDialog,\n  Typography,\n} from \"@mui/joy\";\n\nconst configuration = new Configuration({\n  organization: \"org-FtF6gV7TTvDQGBIAMsnGmKVY\",\n  apiKey: \"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\",\n});\n\nconst openai = new OpenAIApi(configuration);\nconst response = await openai.listEngines();\nconsole.log(response)\n\nfunction TranslationApp() {\n  const [inputText, setInputText] = useState(\"\");\n\n  const handleInputChange = (event) => {\n    setInputText(event.target.value);\n  };\n\n  const handleButtonClick = async () => {\n    // try {\n    //   const completion = await openai.chat.completions.create({\n    //     model: \"gpt-3.5-turbo\",\n    //     messages: [\n    //       { role: \"system\", content: \"You are a helpful translator. Please translate it in Korean.\" },\n    //       { role: \"user\", content: inputText },\n    //     ],\n    //     max_tokens: 200,\n    //   });\n    //   const response = completion.data.choices[0].message.content;\n\n    //   // API 응답을 처리하거나 다른 작업 수행\n    //   console.log(\"Chatbot Response:\", response);\n    // } catch (error) {\n    //   console.error(\"Error fetching chat completion:\", error);\n    // }\n    const completion = await openai.chat.completions.create({\n      messages: [{ role: \"system\", content: \"You are a helpful assistant.\" }],\n      model: \"gpt-3.5-turbo\",\n    });\n  \n    console.log(completion.choices[0]);\n  \n  };\n\n  return (\n    <div className=\"Main\">\n      <div className=\"InputWrapper\">\n        <Input\n          color=\"danger\"\n          variant=\"soft\"\n          placeholder=\"여기에 입력하세요…\"\n          value={inputText}\n          onChange={handleInputChange}\n        />\n\n        <Button variant=\"soft\" color=\"primary\" onClick={handleButtonClick}>\n          Open modal\n        </Button>\n      </div>     \n    </div>\n  );\n}\n\nexport default TranslationApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,EAAEC,SAAS,QAAQ,QAAQ;AACjD,SACEC,KAAK,EACLC,MAAM,EACNC,KAAK,EACLC,UAAU,EACVC,WAAW,EACXC,UAAU,QACL,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElB,MAAMC,aAAa,GAAG,IAAIV,aAAa,CAAC;EACtCW,YAAY,EAAE,8BAA8B;EAC5CC,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAG,IAAIZ,SAAS,CAACS,aAAa,CAAC;AAC3C,MAAMI,QAAQ,GAAG,MAAMD,MAAM,CAACE,WAAW,CAAC,CAAC;AAC3CC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;AAErB,SAASI,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMuB,iBAAiB,GAAIC,KAAK,IAAK;IACnCF,YAAY,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA,MAAMC,UAAU,GAAG,MAAMd,MAAM,CAACe,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC;MACtDC,QAAQ,EAAE,CAAC;QAAEC,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAA+B,CAAC,CAAC;MACvEC,KAAK,EAAE;IACT,CAAC,CAAC;IAEFlB,OAAO,CAACC,GAAG,CAACU,UAAU,CAACQ,OAAO,CAAC,CAAC,CAAC,CAAC;EAEpC,CAAC;EAED,oBACE1B,OAAA;IAAK2B,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnB5B,OAAA;MAAK2B,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B5B,OAAA,CAACP,KAAK;QACJoC,KAAK,EAAC,QAAQ;QACdC,OAAO,EAAC,MAAM;QACdC,WAAW,EAAC,yDAAY;QACxBf,KAAK,EAAEL,SAAU;QACjBqB,QAAQ,EAAEnB;MAAkB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eAEFpC,OAAA,CAACN,MAAM;QAACoC,OAAO,EAAC,MAAM;QAACD,KAAK,EAAC,SAAS;QAACQ,OAAO,EAAEpB,iBAAkB;QAAAW,QAAA,EAAC;MAEnE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1B,EAAA,CAlDQD,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AAoDvB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}