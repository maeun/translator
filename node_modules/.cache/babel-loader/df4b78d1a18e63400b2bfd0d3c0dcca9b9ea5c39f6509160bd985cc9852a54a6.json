{"ast":null,"code":"var _jsxFileName = \"C:\\\\side_project\\\\translator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Configuration, OpenAIApi } from \"openai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst configuration = new Configuration({\n  organization: \"org-FtF6gV7TTvDQGBIAMsnGmKVY\",\n  apiKey: \"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\"\n});\nconst openai = new OpenAIApi(configuration);\nconst response = await openai.listEngines();\nconsole.log(response);\nfunction TranslationApp() {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [open, setOpen] = useState(false); // 모달 창 열기/닫기 상태\n\n  const handleInputChange = event => {\n    setInputText(event.target.value);\n  };\n  const handleButtonClick = async () => {\n    try {\n      const completion = await openai.createChatCompletion({\n        model: \"gpt-3.5-turbo\",\n        messages: [{\n          role: \"system\",\n          content: \"You are a helpful assistant.\"\n        }, {\n          role: \"user\",\n          content: inputText\n        }],\n        max_tokens: 200\n      });\n      const response = completion.data.choices[0].message.content;\n\n      // API 요청 완료 후 모달 창 열기\n      setOpen(true);\n\n      // API 응답을 처리하거나 다른 작업 수행\n      console.log(\"Chatbot Response:\", response);\n    } catch (error) {\n      console.error(\"Error fetching chat completion:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"InputWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        color: \"danger\",\n        variant: \"soft\",\n        placeholder: \"\\uC5EC\\uAE30\\uC5D0 \\uC785\\uB825\\uD558\\uC138\\uC694\\u2026\",\n        value: inputText,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"soft\",\n        color: \"primary\",\n        onClick: handleButtonClick,\n        children: \"Open modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(TranslationApp, \"Da8ye3u4gWSuFeUQsrlvX+kXxkA=\");\n_c = TranslationApp;\nexport default TranslationApp;\nvar _c;\n$RefreshReg$(_c, \"TranslationApp\");","map":{"version":3,"names":["React","useState","Configuration","OpenAIApi","jsxDEV","_jsxDEV","configuration","organization","apiKey","openai","response","listEngines","console","log","TranslationApp","_s","inputText","setInputText","open","setOpen","handleInputChange","event","target","value","handleButtonClick","completion","createChatCompletion","model","messages","role","content","max_tokens","data","choices","message","error","className","children","Input","color","variant","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","Button","onClick","_c","$RefreshReg$"],"sources":["C:/side_project/translator/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Configuration, OpenAIApi } from \"openai\";\n\nconst configuration = new Configuration({\n  organization: \"org-FtF6gV7TTvDQGBIAMsnGmKVY\",\n  apiKey: \"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\",\n});\n\nconst openai = new OpenAIApi(configuration);\nconst response = await openai.listEngines();\nconsole.log(response)\n\nfunction TranslationApp() {\n  const [inputText, setInputText] = useState(\"\");\n  const [open, setOpen] = useState(false); // 모달 창 열기/닫기 상태\n\n  const handleInputChange = (event) => {\n    setInputText(event.target.value);\n  };\n\n  const handleButtonClick = async () => {\n    try {\n      const completion = await openai.createChatCompletion({\n        model: \"gpt-3.5-turbo\",\n        messages: [\n          { role: \"system\", content: \"You are a helpful assistant.\" },\n          { role: \"user\", content: inputText },\n        ],\n        max_tokens: 200,\n      });\n      const response = completion.data.choices[0].message.content;\n\n      // API 요청 완료 후 모달 창 열기\n      setOpen(true);\n\n      // API 응답을 처리하거나 다른 작업 수행\n      console.log(\"Chatbot Response:\", response);\n    } catch (error) {\n      console.error(\"Error fetching chat completion:\", error);\n    }\n  };\n\n  return (\n    <div className=\"Main\">\n      <div className=\"InputWrapper\">\n        <Input\n          color=\"danger\"\n          variant=\"soft\"\n          placeholder=\"여기에 입력하세요…\"\n          value={inputText}\n          onChange={handleInputChange}\n        />\n\n        <Button variant=\"soft\" color=\"primary\" onClick={handleButtonClick}>\n          Open modal\n        </Button>\n      </div>     \n    </div>\n  );\n}\n\nexport default TranslationApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,EAAEC,SAAS,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,aAAa,GAAG,IAAIJ,aAAa,CAAC;EACtCK,YAAY,EAAE,8BAA8B;EAC5CC,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAG,IAAIN,SAAS,CAACG,aAAa,CAAC;AAC3C,MAAMI,QAAQ,GAAG,MAAMD,MAAM,CAACE,WAAW,CAAC,CAAC;AAC3CC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;AAErB,SAASI,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEzC,MAAMmB,iBAAiB,GAAIC,KAAK,IAAK;IACnCJ,YAAY,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,UAAU,GAAG,MAAMhB,MAAM,CAACiB,oBAAoB,CAAC;QACnDC,KAAK,EAAE,eAAe;QACtBC,QAAQ,EAAE,CACR;UAAEC,IAAI,EAAE,QAAQ;UAAEC,OAAO,EAAE;QAA+B,CAAC,EAC3D;UAAED,IAAI,EAAE,MAAM;UAAEC,OAAO,EAAEd;QAAU,CAAC,CACrC;QACDe,UAAU,EAAE;MACd,CAAC,CAAC;MACF,MAAMrB,QAAQ,GAAGe,UAAU,CAACO,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACJ,OAAO;;MAE3D;MACAX,OAAO,CAAC,IAAI,CAAC;;MAEb;MACAP,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,QAAQ,CAAC;IAC5C,CAAC,CAAC,OAAOyB,KAAK,EAAE;MACdvB,OAAO,CAACuB,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EAED,oBACE9B,OAAA;IAAK+B,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBhC,OAAA;MAAK+B,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BhC,OAAA,CAACiC,KAAK;QACJC,KAAK,EAAC,QAAQ;QACdC,OAAO,EAAC,MAAM;QACdC,WAAW,EAAC,yDAAY;QACxBlB,KAAK,EAAEP,SAAU;QACjB0B,QAAQ,EAAEtB;MAAkB;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eAEFzC,OAAA,CAAC0C,MAAM;QAACP,OAAO,EAAC,MAAM;QAACD,KAAK,EAAC,SAAS;QAACS,OAAO,EAAExB,iBAAkB;QAAAa,QAAA,EAAC;MAEnE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC/B,EAAA,CA/CQD,cAAc;AAAAmC,EAAA,GAAdnC,cAAc;AAiDvB,eAAeA,cAAc;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}