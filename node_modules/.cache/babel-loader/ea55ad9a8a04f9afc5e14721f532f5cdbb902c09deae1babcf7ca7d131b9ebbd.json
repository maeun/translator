{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/side_project/translator/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"C:/side_project/translator/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectWithoutProperties from \"C:/side_project/translator/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"C:/side_project/translator/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/side_project/translator/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"C:/side_project/translator/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"C:/side_project/translator/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/side_project/translator/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/side_project/translator/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/side_project/translator/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"C:/side_project/translator/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport _asyncToGenerator from \"C:/side_project/translator/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _asyncIterator from \"C:/side_project/translator/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport _awaitAsyncGenerator from \"C:/side_project/translator/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"C:/side_project/translator/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nvar _excluded = [\"signal\"];\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === 'm') throw new TypeError('Private method is not writable');\n  if (kind === 'a' && !f) throw new TypeError('Private accessor was defined without a setter');\n  if (typeof state === 'function' ? receiver !== state || !f : !state.has(receiver)) throw new TypeError('Cannot write private member to an object whose class did not declare it');\n  return kind === 'a' ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === 'a' && !f) throw new TypeError('Private accessor was defined without a getter');\n  if (typeof state === 'function' ? receiver !== state || !f : !state.has(receiver)) throw new TypeError('Cannot read private member from an object whose class did not declare it');\n  return kind === 'm' ? f : kind === 'a' ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nimport { VERSION } from './version.mjs';\nimport { Stream } from './streaming.mjs';\nimport { APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError } from './error.mjs';\nimport { getDefaultAgent } from 'openai/_shims/agent';\nimport { fetch, isPolyfilled as fetchIsPolyfilled } from 'openai/_shims/fetch';\nimport { isMultipartBody } from './uploads.mjs';\nexport { maybeMultipartFormRequestOptions, multipartFormRequestOptions, createForm } from './uploads.mjs';\nvar MAX_RETRIES = 2;\nfunction defaultParseResponse(_x) {\n  return _defaultParseResponse.apply(this, arguments);\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nfunction _defaultParseResponse() {\n  _defaultParseResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(props) {\n    var response, contentType, json, text;\n    return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n      while (1) switch (_context12.prev = _context12.next) {\n        case 0:\n          response = props.response;\n          if (!props.options.stream) {\n            _context12.next = 3;\n            break;\n          }\n          return _context12.abrupt(\"return\", new Stream(response, props.controller));\n        case 3:\n          contentType = response.headers.get('content-type');\n          if (!(contentType === null || contentType === void 0 ? void 0 : contentType.includes('application/json'))) {\n            _context12.next = 10;\n            break;\n          }\n          _context12.next = 7;\n          return response.json();\n        case 7:\n          json = _context12.sent;\n          debug('response', response.status, response.url, response.headers, json);\n          return _context12.abrupt(\"return\", json);\n        case 10:\n          _context12.next = 12;\n          return response.text();\n        case 12:\n          text = _context12.sent;\n          debug('response', response.status, response.url, response.headers, text);\n          return _context12.abrupt(\"return\", text);\n        case 15:\n        case \"end\":\n          return _context12.stop();\n      }\n    }, _callee12);\n  }));\n  return _defaultParseResponse.apply(this, arguments);\n}\nexport var APIPromise = /*#__PURE__*/function (_Promise) {\n  _inherits(APIPromise, _Promise);\n  var _super = _createSuper(APIPromise);\n  function APIPromise(responsePromise) {\n    var _this4;\n    var parseResponse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultParseResponse;\n    _classCallCheck(this, APIPromise);\n    _this4 = _super.call(this, function (resolve) {\n      // this is maybe a bit weird but this has to be a no-op to not implicitly\n      // parse the response body; instead .then, .catch, .finally are overridden\n      // to parse the response\n      resolve(null);\n    });\n    _this4.responsePromise = responsePromise;\n    _this4.parseResponse = parseResponse;\n    return _this4;\n  }\n  _createClass(APIPromise, [{\n    key: \"_thenUnwrap\",\n    value: function _thenUnwrap(transform) {\n      var _this5 = this;\n      return new APIPromise(this.responsePromise, /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(props) {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = transform;\n                _context.next = 3;\n                return _this5.parseResponse(props);\n              case 3:\n                _context.t1 = _context.sent;\n                return _context.abrupt(\"return\", (0, _context.t0)(_context.t1));\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        }));\n        return function (_x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     */\n  }, {\n    key: \"asResponse\",\n    value: function asResponse() {\n      return this.responsePromise.then(function (p) {\n        return p.response;\n      });\n    }\n    /**\n     * Gets the parsed response data and the raw `Response` instance.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     */\n  }, {\n    key: \"withResponse\",\n    value: function () {\n      var _withResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _yield$Promise$all, _yield$Promise$all2, data, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return Promise.all([this.parse(), this.asResponse()]);\n            case 2:\n              _yield$Promise$all = _context2.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n              data = _yield$Promise$all2[0];\n              response = _yield$Promise$all2[1];\n              return _context2.abrupt(\"return\", {\n                data: data,\n                response: response\n              });\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function withResponse() {\n        return _withResponse.apply(this, arguments);\n      }\n      return withResponse;\n    }()\n  }, {\n    key: \"parse\",\n    value: function parse() {\n      if (!this.parsedPromise) {\n        this.parsedPromise = this.responsePromise.then(this.parseResponse);\n      }\n      return this.parsedPromise;\n    }\n  }, {\n    key: \"then\",\n    value: function then(onfulfilled, onrejected) {\n      return this.parse().then(onfulfilled, onrejected);\n    }\n  }, {\n    key: \"catch\",\n    value: function _catch(onrejected) {\n      return this.parse().catch(onrejected);\n    }\n  }, {\n    key: \"finally\",\n    value: function _finally(onfinally) {\n      return this.parse().finally(onfinally);\n    }\n  }]);\n  return APIPromise;\n}( /*#__PURE__*/_wrapNativeSuper(Promise));\nexport var APIClient = /*#__PURE__*/function () {\n  function APIClient(_ref2) {\n    var baseURL = _ref2.baseURL,\n      maxRetries = _ref2.maxRetries,\n      _ref2$timeout = _ref2.timeout,\n      timeout = _ref2$timeout === void 0 ? 600000 : _ref2$timeout,\n      httpAgent = _ref2.httpAgent,\n      overridenFetch = _ref2.fetch;\n    _classCallCheck(this, APIClient);\n    this.baseURL = baseURL;\n    this.maxRetries = validatePositiveInteger('maxRetries', maxRetries !== null && maxRetries !== void 0 ? maxRetries : MAX_RETRIES);\n    this.timeout = validatePositiveInteger('timeout', timeout);\n    this.httpAgent = httpAgent;\n    this.fetch = overridenFetch !== null && overridenFetch !== void 0 ? overridenFetch : fetch;\n  }\n  _createClass(APIClient, [{\n    key: \"authHeaders\",\n    value: function authHeaders() {\n      return {};\n    }\n    /**\n     * Override this to add your own default headers, for example:\n     *\n     *  {\n     *    ...super.defaultHeaders(),\n     *    Authorization: 'Bearer 123',\n     *  }\n     */\n  }, {\n    key: \"defaultHeaders\",\n    value: function defaultHeaders() {\n      return _objectSpread(_objectSpread({\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'User-Agent': this.getUserAgent()\n      }, getPlatformHeaders()), this.authHeaders());\n    }\n    /**\n     * Override this to add your own headers validation:\n     */\n  }, {\n    key: \"validateHeaders\",\n    value: function validateHeaders(headers, customHeaders) {}\n  }, {\n    key: \"defaultIdempotencyKey\",\n    value: function defaultIdempotencyKey() {\n      return \"stainless-node-retry-\".concat(uuid4());\n    }\n  }, {\n    key: \"get\",\n    value: function get(path, opts) {\n      return this.methodRequest('get', path, opts);\n    }\n  }, {\n    key: \"post\",\n    value: function post(path, opts) {\n      return this.methodRequest('post', path, opts);\n    }\n  }, {\n    key: \"patch\",\n    value: function patch(path, opts) {\n      return this.methodRequest('patch', path, opts);\n    }\n  }, {\n    key: \"put\",\n    value: function put(path, opts) {\n      return this.methodRequest('put', path, opts);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(path, opts) {\n      return this.methodRequest('delete', path, opts);\n    }\n  }, {\n    key: \"methodRequest\",\n    value: function methodRequest(method, path, opts) {\n      return this.request(Promise.resolve(opts).then(function (opts) {\n        return _objectSpread({\n          method: method,\n          path: path\n        }, opts);\n      }));\n    }\n  }, {\n    key: \"getAPIList\",\n    value: function getAPIList(path, Page, opts) {\n      return this.requestAPIList(Page, _objectSpread({\n        method: 'get',\n        path: path\n      }, opts));\n    }\n  }, {\n    key: \"calculateContentLength\",\n    value: function calculateContentLength(body) {\n      if (typeof body === 'string') {\n        if (typeof Buffer !== 'undefined') {\n          return Buffer.byteLength(body, 'utf8').toString();\n        }\n        if (typeof TextEncoder !== 'undefined') {\n          var encoder = new TextEncoder();\n          var encoded = encoder.encode(body);\n          return encoded.length.toString();\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"buildRequest\",\n    value: function buildRequest(options) {\n      var _a, _b, _c, _d, _e, _f;\n      var method = options.method,\n        path = options.path,\n        query = options.query,\n        _options$headers = options.headers,\n        headers = _options$headers === void 0 ? {} : _options$headers;\n      var body = isMultipartBody(options.body) ? options.body.body : options.body ? JSON.stringify(options.body, null, 2) : null;\n      var contentLength = this.calculateContentLength(body);\n      var url = this.buildURL(path, query);\n      if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\n      var timeout = (_a = options.timeout) !== null && _a !== void 0 ? _a : this.timeout;\n      var httpAgent = (_c = (_b = options.httpAgent) !== null && _b !== void 0 ? _b : this.httpAgent) !== null && _c !== void 0 ? _c : getDefaultAgent(url);\n      var minAgentTimeout = timeout + 1000;\n      if (typeof ((_d = httpAgent === null || httpAgent === void 0 ? void 0 : httpAgent.options) === null || _d === void 0 ? void 0 : _d.timeout) === 'number' && minAgentTimeout > ((_e = httpAgent.options.timeout) !== null && _e !== void 0 ? _e : 0)) {\n        // Allow any given request to bump our agent active socket timeout.\n        // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n        // and without mutating agent we would need to create more of them.\n        // This tradeoff optimizes for performance.\n        httpAgent.options.timeout = minAgentTimeout;\n      }\n      if (this.idempotencyHeader && method !== 'get') {\n        if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n        headers[this.idempotencyHeader] = options.idempotencyKey;\n      }\n      var reqHeaders = _objectSpread(_objectSpread(_objectSpread({}, contentLength && {\n        'Content-Length': contentLength\n      }), this.defaultHeaders()), headers);\n      // let builtin fetch set the Content-Type for multipart bodies\n      if (isMultipartBody(options.body) && !fetchIsPolyfilled) {\n        delete reqHeaders['Content-Type'];\n      }\n      // Strip any headers being explicitly omitted with null\n      Object.keys(reqHeaders).forEach(function (key) {\n        return reqHeaders[key] === null && delete reqHeaders[key];\n      });\n      var req = _objectSpread(_objectSpread(_objectSpread({\n        method: method\n      }, body && {\n        body: body\n      }), {}, {\n        headers: reqHeaders\n      }, httpAgent && {\n        agent: httpAgent\n      }), {}, {\n        // @ts-ignore node-fetch uses a custom AbortSignal type that is\n        // not compatible with standard web types\n        signal: (_f = options.signal) !== null && _f !== void 0 ? _f : null\n      });\n      this.validateHeaders(reqHeaders, headers);\n      return {\n        req: req,\n        url: url,\n        timeout: timeout\n      };\n    }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n  }, {\n    key: \"prepareRequest\",\n    value: function () {\n      var _prepareRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(request, _ref3) {\n        var url;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              url = _ref3.url;\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      function prepareRequest(_x3, _x4) {\n        return _prepareRequest.apply(this, arguments);\n      }\n      return prepareRequest;\n    }()\n  }, {\n    key: \"makeStatusError\",\n    value: function makeStatusError(status, error, message, headers) {\n      return APIError.generate(status, error, message, headers);\n    }\n  }, {\n    key: \"request\",\n    value: function request(options) {\n      var remainingRetries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      return new APIPromise(this.makeRequest(options, remainingRetries));\n    }\n  }, {\n    key: \"makeRequest\",\n    value: function () {\n      var _makeRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(optionsInput, retriesRemaining) {\n        var _a, _b, _c, options, _this$buildRequest, req, url, timeout, controller, response, responseHeaders, errText, errJSON, errMessage, err;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return optionsInput;\n            case 2:\n              options = _context4.sent;\n              if (retriesRemaining == null) {\n                retriesRemaining = (_a = options.maxRetries) !== null && _a !== void 0 ? _a : this.maxRetries;\n              }\n              _this$buildRequest = this.buildRequest(options), req = _this$buildRequest.req, url = _this$buildRequest.url, timeout = _this$buildRequest.timeout;\n              _context4.next = 7;\n              return this.prepareRequest(req, {\n                url: url\n              });\n            case 7:\n              debug('request', url, options, req.headers);\n              if (!((_b = options.signal) === null || _b === void 0 ? void 0 : _b.aborted)) {\n                _context4.next = 10;\n                break;\n              }\n              throw new APIUserAbortError();\n            case 10:\n              controller = new AbortController();\n              _context4.next = 13;\n              return this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n            case 13:\n              response = _context4.sent;\n              if (!(response instanceof Error)) {\n                _context4.next = 22;\n                break;\n              }\n              if (!((_c = options.signal) === null || _c === void 0 ? void 0 : _c.aborted)) {\n                _context4.next = 17;\n                break;\n              }\n              throw new APIUserAbortError();\n            case 17:\n              if (!retriesRemaining) {\n                _context4.next = 19;\n                break;\n              }\n              return _context4.abrupt(\"return\", this.retryRequest(options, retriesRemaining));\n            case 19:\n              if (!(response.name === 'AbortError')) {\n                _context4.next = 21;\n                break;\n              }\n              throw new APIConnectionTimeoutError();\n            case 21:\n              throw new APIConnectionError({\n                cause: response\n              });\n            case 22:\n              responseHeaders = createResponseHeaders(response.headers);\n              if (response.ok) {\n                _context4.next = 34;\n                break;\n              }\n              if (!(retriesRemaining && this.shouldRetry(response))) {\n                _context4.next = 26;\n                break;\n              }\n              return _context4.abrupt(\"return\", this.retryRequest(options, retriesRemaining, responseHeaders));\n            case 26:\n              _context4.next = 28;\n              return response.text().catch(function () {\n                return 'Unknown';\n              });\n            case 28:\n              errText = _context4.sent;\n              errJSON = safeJSON(errText);\n              errMessage = errJSON ? undefined : errText;\n              debug('response', response.status, url, responseHeaders, errMessage);\n              err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n              throw err;\n            case 34:\n              return _context4.abrupt(\"return\", {\n                response: response,\n                options: options,\n                controller: controller\n              });\n            case 35:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function makeRequest(_x5, _x6) {\n        return _makeRequest.apply(this, arguments);\n      }\n      return makeRequest;\n    }()\n  }, {\n    key: \"requestAPIList\",\n    value: function requestAPIList(Page, options) {\n      var request = this.makeRequest(options, null);\n      return new PagePromise(this, request, Page);\n    }\n  }, {\n    key: \"buildURL\",\n    value: function buildURL(path, query) {\n      var url = isAbsoluteURL(path) ? new URL(path) : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n      var defaultQuery = this.defaultQuery();\n      if (!isEmptyObj(defaultQuery)) {\n        query = _objectSpread(_objectSpread({}, defaultQuery), query);\n      }\n      if (query) {\n        url.search = this.stringifyQuery(query);\n      }\n      return url.toString();\n    }\n  }, {\n    key: \"stringifyQuery\",\n    value: function stringifyQuery(query) {\n      return Object.entries(query).filter(function (_ref4) {\n        var _ref5 = _slicedToArray(_ref4, 2),\n          _ = _ref5[0],\n          value = _ref5[1];\n        return typeof value !== 'undefined';\n      }).map(function (_ref6) {\n        var _ref7 = _slicedToArray(_ref6, 2),\n          key = _ref7[0],\n          value = _ref7[1];\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n          return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(value));\n        }\n        if (value === null) {\n          return \"\".concat(encodeURIComponent(key), \"=\");\n        }\n        throw new Error(\"Cannot stringify type \".concat(typeof value, \"; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.\"));\n      }).join('&');\n    }\n  }, {\n    key: \"fetchWithTimeout\",\n    value: function () {\n      var _fetchWithTimeout = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(url, init, ms, controller) {\n        var _ref8, signal, options, timeout;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _ref8 = init || {}, signal = _ref8.signal, options = _objectWithoutProperties(_ref8, _excluded);\n              if (signal) signal.addEventListener('abort', function () {\n                return controller.abort();\n              });\n              timeout = setTimeout(function () {\n                return controller.abort();\n              }, ms);\n              return _context5.abrupt(\"return\", this.getRequestClient().fetch(url, _objectSpread({\n                signal: controller.signal\n              }, options)).finally(function () {\n                clearTimeout(timeout);\n              }));\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function fetchWithTimeout(_x7, _x8, _x9, _x10) {\n        return _fetchWithTimeout.apply(this, arguments);\n      }\n      return fetchWithTimeout;\n    }()\n  }, {\n    key: \"getRequestClient\",\n    value: function getRequestClient() {\n      return {\n        fetch: this.fetch\n      };\n    }\n  }, {\n    key: \"shouldRetry\",\n    value: function shouldRetry(response) {\n      // Note this is not a standard header.\n      var shouldRetryHeader = response.headers.get('x-should-retry');\n      // If the server explicitly says whether or not to retry, obey.\n      if (shouldRetryHeader === 'true') return true;\n      if (shouldRetryHeader === 'false') return false;\n      // Retry on lock timeouts.\n      if (response.status === 409) return true;\n      // Retry on rate limits.\n      if (response.status === 429) return true;\n      // Retry internal errors.\n      if (response.status >= 500) return true;\n      return false;\n    }\n  }, {\n    key: \"retryRequest\",\n    value: function () {\n      var _retryRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(options, retriesRemaining, responseHeaders) {\n        var _a, retryAfter, maxRetries, timeout;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              retriesRemaining -= 1;\n              // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n              //\n              // TODO: we may want to handle the case where the header is using the http-date syntax: \"Retry-After: <http-date>\".\n              // See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After#syntax for details.\n              retryAfter = parseInt((responseHeaders === null || responseHeaders === void 0 ? void 0 : responseHeaders['retry-after']) || '');\n              maxRetries = (_a = options.maxRetries) !== null && _a !== void 0 ? _a : this.maxRetries;\n              timeout = this.calculateRetryTimeoutSeconds(retriesRemaining, retryAfter, maxRetries) * 1000;\n              _context6.next = 6;\n              return sleep(timeout);\n            case 6:\n              return _context6.abrupt(\"return\", this.makeRequest(options, retriesRemaining));\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function retryRequest(_x11, _x12, _x13) {\n        return _retryRequest.apply(this, arguments);\n      }\n      return retryRequest;\n    }()\n  }, {\n    key: \"calculateRetryTimeoutSeconds\",\n    value: function calculateRetryTimeoutSeconds(retriesRemaining, retryAfter, maxRetries) {\n      var initialRetryDelay = 0.5;\n      var maxRetryDelay = 2;\n      // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n      // just do what it says.\n      if (Number.isInteger(retryAfter) && retryAfter <= 60) {\n        return retryAfter;\n      }\n      var numRetries = maxRetries - retriesRemaining;\n      // Apply exponential backoff, but not more than the max.\n      var sleepSeconds = Math.min(initialRetryDelay * Math.pow(numRetries - 1, 2), maxRetryDelay);\n      // Apply some jitter, plus-or-minus half a second.\n      var jitter = Math.random() - 0.5;\n      return sleepSeconds + jitter;\n    }\n  }, {\n    key: \"getUserAgent\",\n    value: function getUserAgent() {\n      return \"\".concat(this.constructor.name, \"/JS \").concat(VERSION);\n    }\n  }]);\n  return APIClient;\n}();\nexport var APIResource = /*#__PURE__*/_createClass(function APIResource(client) {\n  _classCallCheck(this, APIResource);\n  this.client = client;\n  this.get = client.get.bind(client);\n  this.post = client.post.bind(client);\n  this.patch = client.patch.bind(client);\n  this.put = client.put.bind(client);\n  this.delete = client.delete.bind(client);\n  this.getAPIList = client.getAPIList.bind(client);\n});\nexport var AbstractPage = /*#__PURE__*/function (_ref9) {\n  function AbstractPage(client, response, body, options) {\n    _classCallCheck(this, AbstractPage);\n    _AbstractPage_client.set(this, void 0);\n    __classPrivateFieldSet(this, _AbstractPage_client, client, 'f');\n    this.options = options;\n    this.response = response;\n    this.body = body;\n  }\n  _createClass(AbstractPage, [{\n    key: \"hasNextPage\",\n    value: function hasNextPage() {\n      var items = this.getPaginatedItems();\n      if (!items.length) return false;\n      return this.nextPageInfo() != null;\n    }\n  }, {\n    key: \"getNextPage\",\n    value: function () {\n      var _getNextPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var nextInfo, nextOptions, params, _iterator3, _step3, _step3$value, key, value;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              nextInfo = this.nextPageInfo();\n              if (nextInfo) {\n                _context7.next = 3;\n                break;\n              }\n              throw new Error('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n            case 3:\n              nextOptions = _objectSpread({}, this.options);\n              if ('params' in nextInfo) {\n                nextOptions.query = _objectSpread(_objectSpread({}, nextOptions.query), nextInfo.params);\n              } else if ('url' in nextInfo) {\n                params = [].concat(_toConsumableArray(Object.entries(nextOptions.query || {})), _toConsumableArray(nextInfo.url.searchParams.entries()));\n                _iterator3 = _createForOfIteratorHelper(params);\n                try {\n                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                    _step3$value = _slicedToArray(_step3.value, 2), key = _step3$value[0], value = _step3$value[1];\n                    nextInfo.url.searchParams.set(key, value);\n                  }\n                } catch (err) {\n                  _iterator3.e(err);\n                } finally {\n                  _iterator3.f();\n                }\n                nextOptions.query = undefined;\n                nextOptions.path = nextInfo.url.toString();\n              }\n              _context7.next = 7;\n              return __classPrivateFieldGet(this, _AbstractPage_client, 'f').requestAPIList(this.constructor, nextOptions);\n            case 7:\n              return _context7.abrupt(\"return\", _context7.sent);\n            case 8:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function getNextPage() {\n        return _getNextPage.apply(this, arguments);\n      }\n      return getNextPage;\n    }()\n  }, {\n    key: \"iterPages\",\n    value: function iterPages() {\n      var _this = this;\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var page;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              // eslint-disable-next-line @typescript-eslint/no-this-alias\n              page = _this;\n              _context8.next = 3;\n              return page;\n            case 3:\n              if (!page.hasNextPage()) {\n                _context8.next = 11;\n                break;\n              }\n              _context8.next = 6;\n              return _awaitAsyncGenerator(page.getNextPage());\n            case 6:\n              page = _context8.sent;\n              _context8.next = 9;\n              return page;\n            case 9:\n              _context8.next = 3;\n              break;\n            case 11:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8);\n      }))();\n    }\n  }, {\n    key: _ref9,\n    value: function value() {\n      var _this2 = this;\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, page, _iterator4, _step4, item;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context9.prev = 2;\n              _iterator = _asyncIterator(_this2.iterPages());\n            case 4:\n              _context9.next = 6;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 6:\n              if (!(_iteratorAbruptCompletion = !(_step = _context9.sent).done)) {\n                _context9.next = 28;\n                break;\n              }\n              page = _step.value;\n              _iterator4 = _createForOfIteratorHelper(page.getPaginatedItems());\n              _context9.prev = 9;\n              _iterator4.s();\n            case 11:\n              if ((_step4 = _iterator4.n()).done) {\n                _context9.next = 17;\n                break;\n              }\n              item = _step4.value;\n              _context9.next = 15;\n              return item;\n            case 15:\n              _context9.next = 11;\n              break;\n            case 17:\n              _context9.next = 22;\n              break;\n            case 19:\n              _context9.prev = 19;\n              _context9.t0 = _context9[\"catch\"](9);\n              _iterator4.e(_context9.t0);\n            case 22:\n              _context9.prev = 22;\n              _iterator4.f();\n              return _context9.finish(22);\n            case 25:\n              _iteratorAbruptCompletion = false;\n              _context9.next = 4;\n              break;\n            case 28:\n              _context9.next = 34;\n              break;\n            case 30:\n              _context9.prev = 30;\n              _context9.t1 = _context9[\"catch\"](2);\n              _didIteratorError = true;\n              _iteratorError = _context9.t1;\n            case 34:\n              _context9.prev = 34;\n              _context9.prev = 35;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context9.next = 39;\n                break;\n              }\n              _context9.next = 39;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 39:\n              _context9.prev = 39;\n              if (!_didIteratorError) {\n                _context9.next = 42;\n                break;\n              }\n              throw _iteratorError;\n            case 42:\n              return _context9.finish(39);\n            case 43:\n              return _context9.finish(34);\n            case 44:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, null, [[2, 30, 34, 44], [9, 19, 22, 25], [35,, 39, 43]]);\n      }))();\n    }\n  }]);\n  return AbstractPage;\n}((_AbstractPage_client = new WeakMap(), Symbol.asyncIterator));\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport var PagePromise = /*#__PURE__*/function (_APIPromise, _Symbol$asyncIterator) {\n  _inherits(PagePromise, _APIPromise);\n  var _super2 = _createSuper(PagePromise);\n  function PagePromise(client, request, Page) {\n    _classCallCheck(this, PagePromise);\n    return _super2.call(this, request, /*#__PURE__*/function () {\n      var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(props) {\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.t0 = Page;\n              _context10.t1 = client;\n              _context10.t2 = props.response;\n              _context10.next = 5;\n              return defaultParseResponse(props);\n            case 5:\n              _context10.t3 = _context10.sent;\n              _context10.t4 = props.options;\n              return _context10.abrupt(\"return\", new _context10.t0(_context10.t1, _context10.t2, _context10.t3, _context10.t4));\n            case 8:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10);\n      }));\n      return function (_x14) {\n        return _ref10.apply(this, arguments);\n      };\n    }());\n  }\n  /**\n   * Allow auto-paginating iteration on an unawaited list call, eg:\n   *\n   *    for await (const item of client.items.list()) {\n   *      console.log(item)\n   *    }\n   */\n  _createClass(PagePromise, [{\n    key: _Symbol$asyncIterator,\n    value: function value() {\n      var _this3 = this;\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        var page, _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, item;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return _awaitAsyncGenerator(_this3);\n            case 2:\n              page = _context11.sent;\n              _iteratorAbruptCompletion2 = false;\n              _didIteratorError2 = false;\n              _context11.prev = 5;\n              _iterator2 = _asyncIterator(page);\n            case 7:\n              _context11.next = 9;\n              return _awaitAsyncGenerator(_iterator2.next());\n            case 9:\n              if (!(_iteratorAbruptCompletion2 = !(_step2 = _context11.sent).done)) {\n                _context11.next = 16;\n                break;\n              }\n              item = _step2.value;\n              _context11.next = 13;\n              return item;\n            case 13:\n              _iteratorAbruptCompletion2 = false;\n              _context11.next = 7;\n              break;\n            case 16:\n              _context11.next = 22;\n              break;\n            case 18:\n              _context11.prev = 18;\n              _context11.t0 = _context11[\"catch\"](5);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context11.t0;\n            case 22:\n              _context11.prev = 22;\n              _context11.prev = 23;\n              if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n                _context11.next = 27;\n                break;\n              }\n              _context11.next = 27;\n              return _awaitAsyncGenerator(_iterator2.return());\n            case 27:\n              _context11.prev = 27;\n              if (!_didIteratorError2) {\n                _context11.next = 30;\n                break;\n              }\n              throw _iteratorError2;\n            case 30:\n              return _context11.finish(27);\n            case 31:\n              return _context11.finish(22);\n            case 32:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, null, [[5, 18, 22, 32], [23,, 27, 31]]);\n      }))();\n    }\n  }]);\n  return PagePromise;\n}(APIPromise, Symbol.asyncIterator);\nexport var createResponseHeaders = function createResponseHeaders(headers) {\n  return new Proxy(Object.fromEntries(\n  // @ts-ignore\n  headers.entries()), {\n    get: function get(target, name) {\n      var key = name.toString();\n      return target[key.toLowerCase()] || target[key];\n    }\n  });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nvar requestOptionsKeys = {\n  method: true,\n  path: true,\n  query: true,\n  body: true,\n  headers: true,\n  maxRetries: true,\n  stream: true,\n  timeout: true,\n  httpAgent: true,\n  signal: true,\n  idempotencyKey: true\n};\nexport var isRequestOptions = function isRequestOptions(obj) {\n  return typeof obj === 'object' && obj !== null && !isEmptyObj(obj) && Object.keys(obj).every(function (k) {\n    return hasOwn(requestOptionsKeys, k);\n  });\n};\nvar getPlatformProperties = function getPlatformProperties() {\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n      'X-Stainless-Runtime': 'deno',\n      'X-Stainless-Runtime-Version': Deno.version\n    };\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': \"other:\".concat(EdgeRuntime),\n      'X-Stainless-Runtime': 'edge',\n      'X-Stainless-Runtime-Version': process.version\n    };\n  }\n  // Check if Node.js\n  if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(process.platform),\n      'X-Stainless-Arch': normalizeArch(process.arch),\n      'X-Stainless-Runtime': 'node',\n      'X-Stainless-Runtime-Version': process.version\n    };\n  }\n  var browserInfo = getBrowserInfo();\n  if (browserInfo) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': 'unknown',\n      'X-Stainless-Runtime': \"browser:\".concat(browserInfo.browser),\n      'X-Stainless-Runtime-Version': browserInfo.version\n    };\n  }\n  // TODO add support for Cloudflare workers, etc.\n  return {\n    'X-Stainless-Lang': 'js',\n    'X-Stainless-Package-Version': VERSION,\n    'X-Stainless-OS': 'Unknown',\n    'X-Stainless-Arch': 'unknown',\n    'X-Stainless-Runtime': 'unknown',\n    'X-Stainless-Runtime-Version': 'unknown'\n  };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n  if (!navigator || typeof navigator === 'undefined') {\n    return null;\n  }\n  // NOTE: The order matters here!\n  var browserPatterns = [{\n    key: 'edge',\n    pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'ie',\n    pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'ie',\n    pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'chrome',\n    pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'firefox',\n    pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'safari',\n    pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/\n  }];\n  // Find the FIRST matching browser\n  for (var _i = 0, _browserPatterns = browserPatterns; _i < _browserPatterns.length; _i++) {\n    var _browserPatterns$_i = _browserPatterns[_i],\n      key = _browserPatterns$_i.key,\n      pattern = _browserPatterns$_i.pattern;\n    var match = pattern.exec(navigator.userAgent);\n    if (match) {\n      var major = match[1] || 0;\n      var minor = match[2] || 0;\n      var patch = match[3] || 0;\n      return {\n        browser: key,\n        version: \"\".concat(major, \".\").concat(minor, \".\").concat(patch)\n      };\n    }\n  }\n  return null;\n}\nvar normalizeArch = function normalizeArch(arch) {\n  // Node docs:\n  // - https://nodejs.org/api/process.html#processarch\n  // Deno docs:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  if (arch === 'x32') return 'x32';\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\n  if (arch === 'arm') return 'arm';\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\n  if (arch) return \"other:\".concat(arch);\n  return 'unknown';\n};\nvar normalizePlatform = function normalizePlatform(platform) {\n  // Node platforms:\n  // - https://nodejs.org/api/process.html#processplatform\n  // Deno platforms:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  // - https://github.com/denoland/deno/issues/14799\n  platform = platform.toLowerCase();\n  // NOTE: this iOS check is untested and may not work\n  // Node does not work natively on IOS, there is a fork at\n  // https://github.com/nodejs-mobile/nodejs-mobile\n  // however it is unknown at the time of writing how to detect if it is running\n  if (platform.includes('ios')) return 'iOS';\n  if (platform === 'android') return 'Android';\n  if (platform === 'darwin') return 'MacOS';\n  if (platform === 'win32') return 'Windows';\n  if (platform === 'freebsd') return 'FreeBSD';\n  if (platform === 'openbsd') return 'OpenBSD';\n  if (platform === 'linux') return 'Linux';\n  if (platform) return \"Other:\".concat(platform);\n  return 'Unknown';\n};\nvar _platformHeaders;\nvar getPlatformHeaders = function getPlatformHeaders() {\n  return _platformHeaders !== null && _platformHeaders !== void 0 ? _platformHeaders : _platformHeaders = getPlatformProperties();\n};\nexport var safeJSON = function safeJSON(text) {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};\n// https://stackoverflow.com/a/19709846\nvar startsWithSchemeRegexp = new RegExp('^(?:[a-z]+:)?//', 'i');\nvar isAbsoluteURL = function isAbsoluteURL(url) {\n  return startsWithSchemeRegexp.test(url);\n};\nvar sleep = function sleep(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n};\nvar validatePositiveInteger = function validatePositiveInteger(name, n) {\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\n    throw new Error(\"\".concat(name, \" must be an integer\"));\n  }\n  if (n < 0) {\n    throw new Error(\"\".concat(name, \" must be a positive integer\"));\n  }\n  return n;\n};\nexport var castToError = function castToError(err) {\n  if (err instanceof Error) return err;\n  return new Error(err);\n};\nexport var ensurePresent = function ensurePresent(value) {\n  if (value == null) throw new Error(\"Expected a value to be given but received \".concat(value, \" instead.\"));\n  return value;\n};\n/**\n * Read an environment variable.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport var readEnv = function readEnv(env) {\n  var _a, _b, _c, _d;\n  if (typeof process !== 'undefined') {\n    return (_b = (_a = process.env) === null || _a === void 0 ? void 0 : _a[env]) !== null && _b !== void 0 ? _b : undefined;\n  }\n  if (typeof Deno !== 'undefined') {\n    return (_d = (_c = Deno.env) === null || _c === void 0 ? void 0 : _c.get) === null || _d === void 0 ? void 0 : _d.call(_c, env);\n  }\n  return undefined;\n};\nexport var coerceInteger = function coerceInteger(value) {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n  throw new Error(\"Could not coerce \".concat(value, \" (type: \").concat(typeof value, \") into a number\"));\n};\nexport var coerceFloat = function coerceFloat(value) {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n  throw new Error(\"Could not coerce \".concat(value, \" (type: \").concat(typeof value, \") into a number\"));\n};\nexport var coerceBoolean = function coerceBoolean(value) {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\nexport var maybeCoerceInteger = function maybeCoerceInteger(value) {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceInteger(value);\n};\nexport var maybeCoerceFloat = function maybeCoerceFloat(value) {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceFloat(value);\n};\nexport var maybeCoerceBoolean = function maybeCoerceBoolean(value) {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n  if (!obj) return true;\n  for (var _k in obj) return false;\n  return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\nexport function debug(action) {\n  if (typeof process !== 'undefined' && process.env['DEBUG'] === 'true') {\n    var _console;\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    (_console = console).log.apply(_console, [\"OpenAI:DEBUG:\".concat(action)].concat(args));\n  }\n}\n/**\n * https://stackoverflow.com/a/2117523\n */\nvar uuid4 = function uuid4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0;\n    var v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\nexport var isRunningInBrowser = function isRunningInBrowser() {\n  return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n    // @ts-ignore\n    typeof window.document !== 'undefined' &&\n    // @ts-ignore\n    typeof navigator !== 'undefined'\n  );\n};\nexport var isHeadersProtocol = function isHeadersProtocol(headers) {\n  return typeof (headers === null || headers === void 0 ? void 0 : headers.get) === 'function';\n};\nexport var getHeader = function getHeader(headers, key) {\n  var lowerKey = key.toLowerCase();\n  if (isHeadersProtocol(headers)) return headers.get(key) || headers.get(lowerKey);\n  var value = headers[key] || headers[lowerKey];\n  if (Array.isArray(value)) {\n    if (value.length <= 1) return value[0];\n    console.warn(\"Received \".concat(value.length, \" entries for the \").concat(key, \" header, using the first entry.\"));\n    return value[0];\n  }\n  return value;\n};\n/**\n * Encodes a string to Base64 format.\n */\nexport var toBase64 = function toBase64(str) {\n  if (!str) return '';\n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(str).toString('base64');\n  }\n  if (typeof btoa !== 'undefined') {\n    return btoa(str);\n  }\n  throw new Error('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};","map":{"version":3,"names":["__classPrivateFieldGet","receiver","state","kind","f","TypeError","has","call","value","get","_AbstractPage_client","VERSION","Stream","APIError","APIConnectionError","APIConnectionTimeoutError","APIUserAbortError","getDefaultAgent","fetch","isPolyfilled","fetchIsPolyfilled","isMultipartBody","maybeMultipartFormRequestOptions","multipartFormRequestOptions","createForm","MAX_RETRIES","defaultParseResponse","_x","_defaultParseResponse","apply","arguments","props","response","contentType","json","text","_regeneratorRuntime","wrap","_callee12$","_context12","prev","next","options","stream","abrupt","controller","headers","includes","sent","status","url","stop","_callee12","_this4","responsePromise","then","p","Promise","all","parse","asResponse","_yield$Promise$all","_context2","_yield$Promise$all2","_slicedToArray","data","_callee2","withResponse","_withResponse","key","parsedPromise","parseResponse","onrejected","onfulfilled","catch","onfinally","_ref2","_ref2$timeout","timeout","baseURL","validatePositiveInteger","maxRetries","overridenFetch","_objectSpread","getUserAgent","getPlatformHeaders","authHeaders","customHeaders","uuid4","methodRequest","path","opts","method","request","resolve","Page","requestAPIList","body","Buffer","byteLength","toString","TextEncoder","encoder","encoded","encode","length","_b","_c","_d","_e","_f","query","_options$headers","JSON","stringify","contentLength","calculateContentLength","buildURL","_a","httpAgent","minAgentTimeout","idempotencyHeader","idempotencyKey","defaultIdempotencyKey","reqHeaders","defaultHeaders","forEach","req","agent","signal","_ref3","_callee3$","_context3","_callee3","prepareRequest","_x3","_x4","_prepareRequest","error","message","generate","remainingRetries","undefined","APIPromise","makeRequest","optionsInput","retriesRemaining","_this$buildRequest","responseHeaders","errText","errJSON","errMessage","err","_callee4$","_context4","buildRequest","debug","aborted","AbortController","fetchWithTimeout","castToError","Error","retryRequest","name","cause","createResponseHeaders","ok","shouldRetry","safeJSON","makeStatusError","_callee4","PagePromise","isAbsoluteURL","URL","endsWith","startsWith","slice","defaultQuery","isEmptyObj","stringifyQuery","entries","_ref4","_ref5","_","_ref6","_ref7","concat","encodeURIComponent","init","ms","_ref8","_callee5$","_context5","_objectWithoutProperties","_excluded","addEventListener","abort","setTimeout","getRequestClient","finally","clearTimeout","_callee5","shouldRetryHeader","_retryRequest","_asyncToGenerator","mark","retryAfter","_callee6$","_context6","parseInt","calculateRetryTimeoutSeconds","sleep","_callee6","initialRetryDelay","maxRetryDelay","isInteger","numRetries","sleepSeconds","Math","min","pow","jitter","random","constructor","APIResource","_createClass","_classCallCheck","client","bind","post","patch","put","delete","getAPIList","AbstractPage","_ref9","set","getPaginatedItems","nextPageInfo","_callee7","nextInfo","nextOptions","params","_iterator3","_step3","_step3$value","_callee7$","_context7","_toConsumableArray","Object","searchParams","_createForOfIteratorHelper","e","_this","_wrapAsyncGenerator","_callee8","page","_callee8$","_context8","hasNextPage","_awaitAsyncGenerator","getNextPage","_this2","_callee9","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","_iterator4","_step4","item","_callee9$","_context9","_asyncIterator","iterPages","done","s","n","t0","finish","t1","return","WeakMap","Symbol","asyncIterator","_APIPromise","_Symbol$asyncIterator","_inherits","_super2","_createSuper","_ref10","_callee10","_callee10$","_context10","t2","t3","t4","_x14","_this3","_callee11","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_callee11$","_context11","Proxy","fromEntries","target","toLowerCase","isRequestOptions","obj","keys","every","k","hasOwn","requestOptionsKeys","getPlatformProperties","Deno","build","normalizePlatform","os","normalizeArch","arch","version","EdgeRuntime","process","prototype","platform","browserInfo","getBrowserInfo","browser","navigator","browserPatterns","pattern","_i","_browserPatterns","_browserPatterns$_i","match","exec","userAgent","major","minor","_platformHeaders","startsWithSchemeRegexp","RegExp","test","Number","ensurePresent","readEnv","env","coerceInteger","round","coerceFloat","parseFloat","coerceBoolean","Boolean","maybeCoerceInteger","maybeCoerceFloat","maybeCoerceBoolean","_k","hasOwnProperty","action","_console","_len","args","Array","_key","console","log","replace","c","r","v","isRunningInBrowser","window","document"],"sources":["C:\\side_project\\translator\\node_modules\\openai\\src\\core.ts"],"sourcesContent":["import { VERSION } from './version';\nimport { Stream } from './streaming';\nimport { APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError } from './error';\nimport type { Readable } from './_shims/node-readable';\nimport { getDefaultAgent, type Agent } from './_shims/agent';\nimport {\n  fetch,\n  isPolyfilled as fetchIsPolyfilled,\n  type RequestInfo,\n  type RequestInit,\n  type Response,\n} from './_shims/fetch.js';\nexport { type Response };\nimport { isMultipartBody } from './uploads';\nexport {\n  maybeMultipartFormRequestOptions,\n  multipartFormRequestOptions,\n  createForm,\n  type Uploadable,\n} from './uploads';\n\nconst MAX_RETRIES = 2;\n\nexport type Fetch = (url: RequestInfo, init?: RequestInit) => Promise<Response>;\n\ntype PromiseOrValue<T> = T | Promise<T>;\n\ntype APIResponseProps = {\n  response: Response;\n  options: FinalRequestOptions;\n  controller: AbortController;\n};\n\nasync function defaultParseResponse<T>(props: APIResponseProps): Promise<T> {\n  const { response } = props;\n  if (props.options.stream) {\n    // Note: there is an invariant here that isn't represented in the type system\n    // that if you set `stream: true` the response type must also be `Stream<T>`\n    return new Stream(response, props.controller) as any;\n  }\n\n  const contentType = response.headers.get('content-type');\n  if (contentType?.includes('application/json')) {\n    const json = await response.json();\n\n    debug('response', response.status, response.url, response.headers, json);\n\n    return json as T;\n  }\n\n  // TODO handle blob, arraybuffer, other content types, etc.\n  const text = await response.text();\n  debug('response', response.status, response.url, response.headers, text);\n  return text as T;\n}\n\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise<T> extends Promise<T> {\n  private parsedPromise: Promise<T> | undefined;\n\n  constructor(\n    private responsePromise: Promise<APIResponseProps>,\n    private parseResponse: (props: APIResponseProps) => PromiseOrValue<T> = defaultParseResponse,\n  ) {\n    super((resolve) => {\n      // this is maybe a bit weird but this has to be a no-op to not implicitly\n      // parse the response body; instead .then, .catch, .finally are overridden\n      // to parse the response\n      resolve(null as any);\n    });\n  }\n\n  _thenUnwrap<U>(transform: (data: T) => U): APIPromise<U> {\n    return new APIPromise(this.responsePromise, async (props) => transform(await this.parseResponse(props)));\n  }\n\n  /**\n   * Gets the raw `Response` instance instead of parsing the response\n   * data.\n   *\n   * If you want to parse the response body but still get the `Response`\n   * instance, you can use {@link withResponse()}.\n   */\n  asResponse(): Promise<Response> {\n    return this.responsePromise.then((p) => p.response);\n  }\n  /**\n   * Gets the parsed response data and the raw `Response` instance.\n   *\n   * If you just want to get the raw `Response` instance without parsing it,\n   * you can use {@link asResponse()}.\n   */\n  async withResponse(): Promise<{ data: T; response: Response }> {\n    const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n    return { data, response };\n  }\n\n  private parse(): Promise<T> {\n    if (!this.parsedPromise) {\n      this.parsedPromise = this.responsePromise.then(this.parseResponse);\n    }\n    return this.parsedPromise;\n  }\n\n  override then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,\n  ): Promise<TResult1 | TResult2> {\n    return this.parse().then(onfulfilled, onrejected);\n  }\n\n  override catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,\n  ): Promise<T | TResult> {\n    return this.parse().catch(onrejected);\n  }\n\n  override finally(onfinally?: (() => void) | undefined | null): Promise<T> {\n    return this.parse().finally(onfinally);\n  }\n}\n\nexport abstract class APIClient {\n  baseURL: string;\n  maxRetries: number;\n  timeout: number;\n  httpAgent: Agent | undefined;\n\n  private fetch: Fetch;\n  protected idempotencyHeader?: string;\n\n  constructor({\n    baseURL,\n    maxRetries,\n    timeout = 600000, // 10 minutes\n    httpAgent,\n    fetch: overridenFetch,\n  }: {\n    baseURL: string;\n    maxRetries?: number | undefined;\n    timeout: number | undefined;\n    httpAgent: Agent | undefined;\n    fetch: Fetch | undefined;\n  }) {\n    this.baseURL = baseURL;\n    this.maxRetries = validatePositiveInteger('maxRetries', maxRetries ?? MAX_RETRIES);\n    this.timeout = validatePositiveInteger('timeout', timeout);\n    this.httpAgent = httpAgent;\n\n    this.fetch = overridenFetch ?? fetch;\n  }\n\n  protected authHeaders(): Headers {\n    return {};\n  }\n\n  /**\n   * Override this to add your own default headers, for example:\n   *\n   *  {\n   *    ...super.defaultHeaders(),\n   *    Authorization: 'Bearer 123',\n   *  }\n   */\n  protected defaultHeaders(): Headers {\n    return {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'User-Agent': this.getUserAgent(),\n      ...getPlatformHeaders(),\n      ...this.authHeaders(),\n    };\n  }\n\n  protected abstract defaultQuery(): DefaultQuery | undefined;\n\n  /**\n   * Override this to add your own headers validation:\n   */\n  protected validateHeaders(headers: Headers, customHeaders: Headers) {}\n\n  protected defaultIdempotencyKey(): string {\n    return `stainless-node-retry-${uuid4()}`;\n  }\n\n  get<Req extends {}, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('get', path, opts);\n  }\n\n  post<Req extends {}, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('post', path, opts);\n  }\n\n  patch<Req extends {}, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('patch', path, opts);\n  }\n\n  put<Req extends {}, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('put', path, opts);\n  }\n\n  delete<Req extends {}, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('delete', path, opts);\n  }\n\n  private methodRequest<Req extends {}, Rsp>(\n    method: HTTPMethod,\n    path: string,\n    opts?: PromiseOrValue<RequestOptions<Req>>,\n  ): APIPromise<Rsp> {\n    return this.request(Promise.resolve(opts).then((opts) => ({ method, path, ...opts })));\n  }\n\n  getAPIList<Item, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\n    path: string,\n    Page: new (...args: any[]) => PageClass,\n    opts?: RequestOptions<any>,\n  ): PagePromise<PageClass, Item> {\n    return this.requestAPIList(Page, { method: 'get', path, ...opts });\n  }\n\n  private calculateContentLength(body: unknown): string | null {\n    if (typeof body === 'string') {\n      if (typeof Buffer !== 'undefined') {\n        return Buffer.byteLength(body, 'utf8').toString();\n      }\n\n      if (typeof TextEncoder !== 'undefined') {\n        const encoder = new TextEncoder();\n        const encoded = encoder.encode(body);\n        return encoded.length.toString();\n      }\n    }\n\n    return null;\n  }\n\n  buildRequest<Req extends {}>(\n    options: FinalRequestOptions<Req>,\n  ): { req: RequestInit; url: string; timeout: number } {\n    const { method, path, query, headers: headers = {} } = options;\n\n    const body =\n      isMultipartBody(options.body) ? options.body.body\n      : options.body ? JSON.stringify(options.body, null, 2)\n      : null;\n    const contentLength = this.calculateContentLength(body);\n\n    const url = this.buildURL(path!, query);\n    if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\n    const timeout = options.timeout ?? this.timeout;\n    const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n    const minAgentTimeout = timeout + 1000;\n    if (\n      typeof (httpAgent as any)?.options?.timeout === 'number' &&\n      minAgentTimeout > ((httpAgent as any).options.timeout ?? 0)\n    ) {\n      // Allow any given request to bump our agent active socket timeout.\n      // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n      // and without mutating agent we would need to create more of them.\n      // This tradeoff optimizes for performance.\n      (httpAgent as any).options.timeout = minAgentTimeout;\n    }\n\n    if (this.idempotencyHeader && method !== 'get') {\n      if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n      headers[this.idempotencyHeader] = options.idempotencyKey;\n    }\n\n    const reqHeaders: Record<string, string> = {\n      ...(contentLength && { 'Content-Length': contentLength }),\n      ...this.defaultHeaders(),\n      ...headers,\n    };\n    // let builtin fetch set the Content-Type for multipart bodies\n    if (isMultipartBody(options.body) && !fetchIsPolyfilled) {\n      delete reqHeaders['Content-Type'];\n    }\n\n    // Strip any headers being explicitly omitted with null\n    Object.keys(reqHeaders).forEach((key) => reqHeaders[key] === null && delete reqHeaders[key]);\n\n    const req: RequestInit = {\n      method,\n      ...(body && { body: body as any }),\n      headers: reqHeaders,\n      ...(httpAgent && { agent: httpAgent }),\n      // @ts-ignore node-fetch uses a custom AbortSignal type that is\n      // not compatible with standard web types\n      signal: options.signal ?? null,\n    };\n\n    this.validateHeaders(reqHeaders, headers);\n\n    return { req, url, timeout };\n  }\n\n  /**\n   * Used as a callback for mutating the given `RequestInit` object.\n   *\n   * This is useful for cases where you want to add certain headers based off of\n   * the request properties, e.g. `method` or `url`.\n   */\n  protected async prepareRequest(request: RequestInit, { url }: { url: string }): Promise<void> {}\n\n  protected makeStatusError(\n    status: number | undefined,\n    error: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ) {\n    return APIError.generate(status, error, message, headers);\n  }\n\n  request<Req extends {}, Rsp>(\n    options: PromiseOrValue<FinalRequestOptions<Req>>,\n    remainingRetries: number | null = null,\n  ): APIPromise<Rsp> {\n    return new APIPromise(this.makeRequest(options, remainingRetries));\n  }\n\n  private async makeRequest(\n    optionsInput: PromiseOrValue<FinalRequestOptions>,\n    retriesRemaining: number | null,\n  ): Promise<APIResponseProps> {\n    const options = await optionsInput;\n    if (retriesRemaining == null) {\n      retriesRemaining = options.maxRetries ?? this.maxRetries;\n    }\n\n    const { req, url, timeout } = this.buildRequest(options);\n\n    await this.prepareRequest(req, { url });\n\n    debug('request', url, options, req.headers);\n\n    if (options.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n\n    const controller = new AbortController();\n    const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n\n    if (response instanceof Error) {\n      if (options.signal?.aborted) {\n        throw new APIUserAbortError();\n      }\n      if (retriesRemaining) {\n        return this.retryRequest(options, retriesRemaining);\n      }\n      if (response.name === 'AbortError') {\n        throw new APIConnectionTimeoutError();\n      }\n      throw new APIConnectionError({ cause: response });\n    }\n\n    const responseHeaders = createResponseHeaders(response.headers);\n\n    if (!response.ok) {\n      if (retriesRemaining && this.shouldRetry(response)) {\n        return this.retryRequest(options, retriesRemaining, responseHeaders);\n      }\n\n      const errText = await response.text().catch(() => 'Unknown');\n      const errJSON = safeJSON(errText);\n      const errMessage = errJSON ? undefined : errText;\n\n      debug('response', response.status, url, responseHeaders, errMessage);\n\n      const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n      throw err;\n    }\n\n    return { response, options, controller };\n  }\n\n  requestAPIList<Item = unknown, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\n    options: FinalRequestOptions,\n  ): PagePromise<PageClass, Item> {\n    const request = this.makeRequest(options, null);\n    return new PagePromise<PageClass, Item>(this, request, Page);\n  }\n\n  buildURL<Req>(path: string, query: Req | undefined): string {\n    const url =\n      isAbsoluteURL(path) ?\n        new URL(path)\n      : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n\n    const defaultQuery = this.defaultQuery();\n    if (!isEmptyObj(defaultQuery)) {\n      query = { ...defaultQuery, ...query } as Req;\n    }\n\n    if (query) {\n      url.search = this.stringifyQuery(query);\n    }\n\n    return url.toString();\n  }\n\n  protected stringifyQuery(query: Record<string, unknown>): string {\n    return Object.entries(query)\n      .filter(([_, value]) => typeof value !== 'undefined')\n      .map(([key, value]) => {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n          return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n        }\n        if (value === null) {\n          return `${encodeURIComponent(key)}=`;\n        }\n        throw new Error(\n          `Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`,\n        );\n      })\n      .join('&');\n  }\n\n  async fetchWithTimeout(\n    url: RequestInfo,\n    init: RequestInit | undefined,\n    ms: number,\n    controller: AbortController,\n  ): Promise<Response> {\n    const { signal, ...options } = init || {};\n    if (signal) signal.addEventListener('abort', () => controller.abort());\n\n    const timeout = setTimeout(() => controller.abort(), ms);\n\n    return this.getRequestClient()\n      .fetch(url, { signal: controller.signal as any, ...options })\n      .finally(() => {\n        clearTimeout(timeout);\n      });\n  }\n\n  protected getRequestClient(): RequestClient {\n    return { fetch: this.fetch };\n  }\n\n  private shouldRetry(response: Response): boolean {\n    // Note this is not a standard header.\n    const shouldRetryHeader = response.headers.get('x-should-retry');\n\n    // If the server explicitly says whether or not to retry, obey.\n    if (shouldRetryHeader === 'true') return true;\n    if (shouldRetryHeader === 'false') return false;\n\n    // Retry on lock timeouts.\n    if (response.status === 409) return true;\n\n    // Retry on rate limits.\n    if (response.status === 429) return true;\n\n    // Retry internal errors.\n    if (response.status >= 500) return true;\n\n    return false;\n  }\n\n  private async retryRequest(\n    options: FinalRequestOptions,\n    retriesRemaining: number,\n    responseHeaders?: Headers | undefined,\n  ): Promise<APIResponseProps> {\n    retriesRemaining -= 1;\n\n    // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n    //\n    // TODO: we may want to handle the case where the header is using the http-date syntax: \"Retry-After: <http-date>\".\n    // See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After#syntax for details.\n    const retryAfter = parseInt(responseHeaders?.['retry-after'] || '');\n\n    const maxRetries = options.maxRetries ?? this.maxRetries;\n    const timeout = this.calculateRetryTimeoutSeconds(retriesRemaining, retryAfter, maxRetries) * 1000;\n    await sleep(timeout);\n\n    return this.makeRequest(options, retriesRemaining);\n  }\n\n  private calculateRetryTimeoutSeconds(\n    retriesRemaining: number,\n    retryAfter: number,\n    maxRetries: number,\n  ): number {\n    const initialRetryDelay = 0.5;\n    const maxRetryDelay = 2;\n\n    // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n    // just do what it says.\n    if (Number.isInteger(retryAfter) && retryAfter <= 60) {\n      return retryAfter;\n    }\n\n    const numRetries = maxRetries - retriesRemaining;\n\n    // Apply exponential backoff, but not more than the max.\n    const sleepSeconds = Math.min(initialRetryDelay * Math.pow(numRetries - 1, 2), maxRetryDelay);\n\n    // Apply some jitter, plus-or-minus half a second.\n    const jitter = Math.random() - 0.5;\n\n    return sleepSeconds + jitter;\n  }\n\n  private getUserAgent(): string {\n    return `${this.constructor.name}/JS ${VERSION}`;\n  }\n}\n\nexport class APIResource {\n  protected client: APIClient;\n  constructor(client: APIClient) {\n    this.client = client;\n\n    this.get = client.get.bind(client);\n    this.post = client.post.bind(client);\n    this.patch = client.patch.bind(client);\n    this.put = client.put.bind(client);\n    this.delete = client.delete.bind(client);\n    this.getAPIList = client.getAPIList.bind(client);\n  }\n\n  protected get: APIClient['get'];\n  protected post: APIClient['post'];\n  protected patch: APIClient['patch'];\n  protected put: APIClient['put'];\n  protected delete: APIClient['delete'];\n  protected getAPIList: APIClient['getAPIList'];\n}\n\nexport type PageInfo = { url: URL } | { params: Record<string, unknown> | null };\n\nexport abstract class AbstractPage<Item> implements AsyncIterable<Item> {\n  #client: APIClient;\n  protected options: FinalRequestOptions;\n\n  protected response: Response;\n  protected body: unknown;\n\n  constructor(client: APIClient, response: Response, body: unknown, options: FinalRequestOptions) {\n    this.#client = client;\n    this.options = options;\n    this.response = response;\n    this.body = body;\n  }\n\n  /**\n   * @deprecated Use nextPageInfo instead\n   */\n  abstract nextPageParams(): Partial<Record<string, unknown>> | null;\n  abstract nextPageInfo(): PageInfo | null;\n\n  abstract getPaginatedItems(): Item[];\n\n  hasNextPage(): boolean {\n    const items = this.getPaginatedItems();\n    if (!items.length) return false;\n    return this.nextPageInfo() != null;\n  }\n\n  async getNextPage(): Promise<AbstractPage<Item>> {\n    const nextInfo = this.nextPageInfo();\n    if (!nextInfo) {\n      throw new Error(\n        'No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.',\n      );\n    }\n    const nextOptions = { ...this.options };\n    if ('params' in nextInfo) {\n      nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n    } else if ('url' in nextInfo) {\n      const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n      for (const [key, value] of params) {\n        nextInfo.url.searchParams.set(key, value);\n      }\n      nextOptions.query = undefined;\n      nextOptions.path = nextInfo.url.toString();\n    }\n    return await this.#client.requestAPIList(this.constructor as any, nextOptions);\n  }\n\n  async *iterPages() {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let page: AbstractPage<Item> = this;\n    yield page;\n    while (page.hasNextPage()) {\n      page = await page.getNextPage();\n      yield page;\n    }\n  }\n\n  async *[Symbol.asyncIterator]() {\n    for await (const page of this.iterPages()) {\n      for (const item of page.getPaginatedItems()) {\n        yield item;\n      }\n    }\n  }\n}\n\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise<\n    PageClass extends AbstractPage<Item>,\n    Item = ReturnType<PageClass['getPaginatedItems']>[number],\n  >\n  extends APIPromise<PageClass>\n  implements AsyncIterable<Item>\n{\n  constructor(\n    client: APIClient,\n    request: Promise<APIResponseProps>,\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\n  ) {\n    super(\n      request,\n      async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options),\n    );\n  }\n\n  /**\n   * Allow auto-paginating iteration on an unawaited list call, eg:\n   *\n   *    for await (const item of client.items.list()) {\n   *      console.log(item)\n   *    }\n   */\n  async *[Symbol.asyncIterator]() {\n    const page = await this;\n    for await (const item of page) {\n      yield item;\n    }\n  }\n}\n\nexport const createResponseHeaders = (\n  headers: Awaited<ReturnType<Fetch>>['headers'],\n): Record<string, string> => {\n  return new Proxy(\n    Object.fromEntries(\n      // @ts-ignore\n      headers.entries(),\n    ),\n    {\n      get(target, name) {\n        const key = name.toString();\n        return target[key.toLowerCase()] || target[key];\n      },\n    },\n  );\n};\n\ntype HTTPMethod = 'get' | 'post' | 'put' | 'patch' | 'delete';\n\nexport type RequestClient = { fetch: Fetch };\nexport type Headers = Record<string, string | null | undefined>;\nexport type DefaultQuery = Record<string, string | undefined>;\nexport type KeysEnum<T> = { [P in keyof Required<T>]: true };\n\nexport type RequestOptions<Req extends {} = Record<string, unknown> | Readable> = {\n  method?: HTTPMethod;\n  path?: string;\n  query?: Req | undefined;\n  body?: Req | undefined;\n  headers?: Headers | undefined;\n\n  maxRetries?: number;\n  stream?: boolean | undefined;\n  timeout?: number;\n  httpAgent?: Agent;\n  signal?: AbortSignal | undefined | null;\n  idempotencyKey?: string;\n};\n\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys: KeysEnum<RequestOptions> = {\n  method: true,\n  path: true,\n  query: true,\n  body: true,\n  headers: true,\n\n  maxRetries: true,\n  stream: true,\n  timeout: true,\n  httpAgent: true,\n  signal: true,\n  idempotencyKey: true,\n};\n\nexport const isRequestOptions = (obj: unknown): obj is RequestOptions => {\n  return (\n    typeof obj === 'object' &&\n    obj !== null &&\n    !isEmptyObj(obj) &&\n    Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k))\n  );\n};\n\nexport type FinalRequestOptions<Req extends {} = Record<string, unknown> | Readable> = RequestOptions<Req> & {\n  method: HTTPMethod;\n  path: string;\n};\n\ndeclare const Deno: any;\ndeclare const EdgeRuntime: any;\ntype Arch = 'x32' | 'x64' | 'arm' | 'arm64' | `other:${string}` | 'unknown';\ntype PlatformName =\n  | 'MacOS'\n  | 'Linux'\n  | 'Windows'\n  | 'FreeBSD'\n  | 'OpenBSD'\n  | 'iOS'\n  | 'Android'\n  | `Other:${string}`\n  | 'Unknown';\ntype Browser = 'ie' | 'edge' | 'chrome' | 'firefox' | 'safari';\ntype PlatformProperties = {\n  'X-Stainless-Lang': 'js';\n  'X-Stainless-Package-Version': string;\n  'X-Stainless-OS': PlatformName;\n  'X-Stainless-Arch': Arch;\n  'X-Stainless-Runtime': 'node' | 'deno' | 'edge' | `browser:${Browser}` | 'unknown';\n  'X-Stainless-Runtime-Version': string;\n};\nconst getPlatformProperties = (): PlatformProperties => {\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n      'X-Stainless-Runtime': 'deno',\n      'X-Stainless-Runtime-Version': Deno.version,\n    };\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': `other:${EdgeRuntime}`,\n      'X-Stainless-Runtime': 'edge',\n      'X-Stainless-Runtime-Version': process.version,\n    };\n  }\n  // Check if Node.js\n  if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(process.platform),\n      'X-Stainless-Arch': normalizeArch(process.arch),\n      'X-Stainless-Runtime': 'node',\n      'X-Stainless-Runtime-Version': process.version,\n    };\n  }\n\n  const browserInfo = getBrowserInfo();\n  if (browserInfo) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': 'unknown',\n      'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n      'X-Stainless-Runtime-Version': browserInfo.version,\n    };\n  }\n\n  // TODO add support for Cloudflare workers, etc.\n  return {\n    'X-Stainless-Lang': 'js',\n    'X-Stainless-Package-Version': VERSION,\n    'X-Stainless-OS': 'Unknown',\n    'X-Stainless-Arch': 'unknown',\n    'X-Stainless-Runtime': 'unknown',\n    'X-Stainless-Runtime-Version': 'unknown',\n  };\n};\n\ntype BrowserInfo = {\n  browser: Browser;\n  version: string;\n};\n\ndeclare const navigator: { userAgent: string } | undefined;\n\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo(): BrowserInfo | null {\n  if (!navigator || typeof navigator === 'undefined') {\n    return null;\n  }\n\n  // NOTE: The order matters here!\n  const browserPatterns = [\n    { key: 'edge' as const, pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'ie' as const, pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'ie' as const, pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'chrome' as const, pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'firefox' as const, pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'safari' as const, pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n  ];\n\n  // Find the FIRST matching browser\n  for (const { key, pattern } of browserPatterns) {\n    const match = pattern.exec(navigator.userAgent);\n    if (match) {\n      const major = match[1] || 0;\n      const minor = match[2] || 0;\n      const patch = match[3] || 0;\n\n      return { browser: key, version: `${major}.${minor}.${patch}` };\n    }\n  }\n\n  return null;\n}\n\nconst normalizeArch = (arch: string): Arch => {\n  // Node docs:\n  // - https://nodejs.org/api/process.html#processarch\n  // Deno docs:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  if (arch === 'x32') return 'x32';\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\n  if (arch === 'arm') return 'arm';\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\n  if (arch) return `other:${arch}`;\n  return 'unknown';\n};\n\nconst normalizePlatform = (platform: string): PlatformName => {\n  // Node platforms:\n  // - https://nodejs.org/api/process.html#processplatform\n  // Deno platforms:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  // - https://github.com/denoland/deno/issues/14799\n\n  platform = platform.toLowerCase();\n\n  // NOTE: this iOS check is untested and may not work\n  // Node does not work natively on IOS, there is a fork at\n  // https://github.com/nodejs-mobile/nodejs-mobile\n  // however it is unknown at the time of writing how to detect if it is running\n  if (platform.includes('ios')) return 'iOS';\n  if (platform === 'android') return 'Android';\n  if (platform === 'darwin') return 'MacOS';\n  if (platform === 'win32') return 'Windows';\n  if (platform === 'freebsd') return 'FreeBSD';\n  if (platform === 'openbsd') return 'OpenBSD';\n  if (platform === 'linux') return 'Linux';\n  if (platform) return `Other:${platform}`;\n  return 'Unknown';\n};\n\nlet _platformHeaders: PlatformProperties;\nconst getPlatformHeaders = () => {\n  return (_platformHeaders ??= getPlatformProperties());\n};\n\nexport const safeJSON = (text: string) => {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n// https://stackoverflow.com/a/19709846\nconst startsWithSchemeRegexp = new RegExp('^(?:[a-z]+:)?//', 'i');\nconst isAbsoluteURL = (url: string): boolean => {\n  return startsWithSchemeRegexp.test(url);\n};\n\nconst sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst validatePositiveInteger = (name: string, n: unknown): number => {\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\n    throw new Error(`${name} must be an integer`);\n  }\n  if (n < 0) {\n    throw new Error(`${name} must be a positive integer`);\n  }\n  return n;\n};\n\nexport const castToError = (err: any): Error => {\n  if (err instanceof Error) return err;\n  return new Error(err);\n};\n\nexport const ensurePresent = <T>(value: T | null | undefined): T => {\n  if (value == null) throw new Error(`Expected a value to be given but received ${value} instead.`);\n  return value;\n};\n\n/**\n * Read an environment variable.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env: string): string | undefined => {\n  if (typeof process !== 'undefined') {\n    return process.env?.[env] ?? undefined;\n  }\n  if (typeof Deno !== 'undefined') {\n    return Deno.env?.get?.(env);\n  }\n  return undefined;\n};\n\nexport const coerceInteger = (value: unknown): number => {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n\n  throw new Error(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceFloat = (value: unknown): number => {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n\n  throw new Error(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceBoolean = (value: unknown): boolean => {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\n\nexport const maybeCoerceInteger = (value: unknown): number | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceInteger(value);\n};\n\nexport const maybeCoerceFloat = (value: unknown): number | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceFloat(value);\n};\n\nexport const maybeCoerceBoolean = (value: unknown): boolean | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceBoolean(value);\n};\n\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj: Object | null | undefined): boolean {\n  if (!obj) return true;\n  for (const _k in obj) return false;\n  return true;\n}\n\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj: Object, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function debug(action: string, ...args: any[]) {\n  if (typeof process !== 'undefined' && process.env['DEBUG'] === 'true') {\n    console.log(`OpenAI:DEBUG:${action}`, ...args);\n  }\n}\n\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport const isRunningInBrowser = () => {\n  return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n    // @ts-ignore\n    typeof window.document !== 'undefined' &&\n    // @ts-ignore\n    typeof navigator !== 'undefined'\n  );\n};\n\nexport interface HeadersProtocol {\n  get: (header: string) => string | null | undefined;\n}\nexport type HeadersLike = Record<string, string | string[] | undefined> | HeadersProtocol;\n\nexport const isHeadersProtocol = (headers: any): headers is HeadersProtocol => {\n  return typeof headers?.get === 'function';\n};\n\nexport const getHeader = (headers: HeadersLike, key: string): string | null | undefined => {\n  const lowerKey = key.toLowerCase();\n  if (isHeadersProtocol(headers)) return headers.get(key) || headers.get(lowerKey);\n  const value = headers[key] || headers[lowerKey];\n  if (Array.isArray(value)) {\n    if (value.length <= 1) return value[0];\n    console.warn(`Received ${value.length} entries for the ${key} header, using the first entry.`);\n    return value[0];\n  }\n  return value;\n};\n\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str: string | null | undefined): string => {\n  if (!str) return '';\n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(str).toString('base64');\n  }\n\n  if (typeof btoa !== 'undefined') {\n    return btoa(str);\n  }\n\n  throw new Error('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}